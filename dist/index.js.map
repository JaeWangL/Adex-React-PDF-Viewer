{"version":3,"sources":["../src/index.ts","../src/AdexViewer.tsx"],"sourcesContent":["import \"./index.css\";\r\nexport { default as AdexViewer } from \"./AdexViewer\";","\"use client\"\r\nimport { useEffect, useState, useRef, useCallback, useMemo } from \"react\"\r\nimport type React from \"react\"\r\n\r\nimport { Document, Page, pdfjs } from \"react-pdf\"\r\nimport \"react-pdf/dist/esm/Page/TextLayer.css\" // Import text layer styles\r\nimport \"react-pdf/dist/esm/Page/AnnotationLayer.css\" // Import annotation layer styles\r\nimport \"./index.css\"\r\n\r\n// Set worker source for pdf.js\r\npdfjs.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`\r\n\r\ninterface Annotation {\r\n  id: string\r\n  pageNumber: number\r\n  type: \"highlight\" | \"note\" | \"drawing\"\r\n  content?: string\r\n  color: string\r\n  position: {\r\n    x: number\r\n    y: number\r\n    width?: number\r\n    height?: number\r\n  }\r\n  points?: { x: number; y: number }[] // For drawing annotations\r\n  createdAt: number\r\n}\r\n\r\ninterface PDFViewerProps {\r\n  data: { url: string }\r\n  credits?: boolean | null\r\n  showSidebar?: boolean | null\r\n  showToolbar?: boolean | null\r\n  showControls?: {\r\n    navigation?: boolean\r\n    zoom?: boolean\r\n    fullscreen?: boolean\r\n    download?: boolean\r\n    info?: boolean\r\n    sidebarButton?: boolean\r\n    rotation?: boolean // New option for page rotation\r\n    print?: boolean // New option for print button\r\n    search?: boolean // New option for search functionality\r\n    bookmarks?: boolean // New option for bookmarks functionality\r\n    annotations?: boolean // New option for annotations functionality\r\n  }\r\n  defaultValues?: {\r\n    zoom?: number\r\n    page?: number\r\n    fullscreen?: boolean\r\n  }\r\n  responsive?: {\r\n    mobileBreakpoint?: number\r\n    hideSidebarOnMobile?: boolean\r\n    reduceToolbarOnMobile?: boolean\r\n  }\r\n  textOptions?: {\r\n    enableSelection?: boolean\r\n    enableCopy?: boolean\r\n  }\r\n  printOptions?: {\r\n    printBackground?: boolean\r\n    pageRangeEnabled?: boolean\r\n  }\r\n}\r\n\r\n// Define a type for search results\r\ninterface SearchResult {\r\n  pageIndex: number\r\n  matchIndex: number\r\n  text: string\r\n  context: string // Added context field for displaying text around the match\r\n  position: {\r\n    left: number\r\n    top: number\r\n    right: number\r\n    bottom: number\r\n  }\r\n}\r\n\r\n// Add these new interfaces for outline and bookmarks\r\ninterface OutlineItem {\r\n  title: string\r\n  dest?: any\r\n  items?: OutlineItem[]\r\n  pageNumber?: number\r\n  expanded?: boolean\r\n  id: string\r\n}\r\n\r\ninterface Bookmark {\r\n  id: string\r\n  title: string\r\n  pageNumber: number\r\n  createdAt: number\r\n}\r\n\r\n// Update the default props to include bookmarks\r\nconst AdexViewer: React.FC<PDFViewerProps> = ({\r\n  data,\r\n  credits,\r\n  showSidebar,\r\n  showToolbar = true,\r\n  showControls = {\r\n    navigation: true,\r\n    zoom: true,\r\n    fullscreen: true,\r\n    download: true,\r\n    info: true,\r\n    sidebarButton: true,\r\n    rotation: true,\r\n    print: true,\r\n    search: true,\r\n    bookmarks: true,\r\n    annotations: true,\r\n  },\r\n  defaultValues = {\r\n    zoom: 1.25,\r\n    page: 1,\r\n    fullscreen: false,\r\n  },\r\n  responsive = {\r\n    mobileBreakpoint: 768,\r\n    hideSidebarOnMobile: true,\r\n    reduceToolbarOnMobile: true,\r\n  },\r\n  textOptions = {\r\n    enableSelection: true,\r\n    enableCopy: true,\r\n  },\r\n  printOptions = {\r\n    printBackground: true,\r\n    pageRangeEnabled: true,\r\n  },\r\n}) => {\r\n  const scaleSets = [0.5, 0.75, 1, 1.25, 1.5, 2, 3]\r\n  const [numPages, setNumPages] = useState<number | null>(null)\r\n  const [pageNumber, setPageNumber] = useState<number>(defaultValues.page || 1)\r\n  const [scale, setScale] = useState<number>(defaultValues.zoom || 1.25)\r\n  const [pdfBlobUrl, setPdfBlobUrl] = useState<string | null>(null)\r\n  const [fullScreenView, setFullScreenView] = useState<boolean>(defaultValues.fullscreen || false)\r\n  const [sidebar, setSidebar] = useState<boolean>(showSidebar || false)\r\n  const [previewNumber, setPreviewNumber] = useState<number>(defaultValues.page || 1)\r\n  const [retryCount, setRetryCount] = useState<number>(0)\r\n  const [retryTimeoutDelay, setRetryTimeoutDelay] = useState<number>(5)\r\n  const viewerRef = useRef<HTMLDivElement>(null)\r\n  const pageRefs = useRef<{ [key: number]: HTMLDivElement | null }>({})\r\n  const previewRef = useRef<HTMLDivElement>(null)\r\n  const printIframeRef = useRef<HTMLIFrameElement | null>(null)\r\n  const showCredits = credits ?? true\r\n  const [metadata, setMetadata] = useState<any>(null)\r\n  const [showInfo, setShowInfo] = useState<boolean>(false)\r\n  const [isPrinting, setIsPrinting] = useState<boolean>(false)\r\n  const maxRetries = 5\r\n  const [isMobile, setIsMobile] = useState<boolean>(false)\r\n  // Add a pageRotations state to track rotation for each page\r\n  const [pageRotations, setPageRotations] = useState<{ [key: number]: number }>({})\r\n  // Add a state to track if text layer should be enabled\r\n  const [isTextLayerEnabled, setIsTextLayerEnabled] = useState<boolean>(\r\n    Boolean(textOptions?.enableSelection) || Boolean(textOptions?.enableCopy),\r\n  )\r\n  // Add a variable to store the original zoom level\r\n  const [originalZoom, setOriginalZoom] = useState<number | null>(null)\r\n\r\n  // Search functionality states\r\n  const [showSearch, setShowSearch] = useState<boolean>(false)\r\n  const [searchQuery, setSearchQuery] = useState<string>(\"\")\r\n  const [searchResults, setSearchResults] = useState<SearchResult[]>([])\r\n  const [currentSearchResult, setCurrentSearchResult] = useState<number>(-1)\r\n  const [isSearching, setIsSearching] = useState<boolean>(false)\r\n  const [pdfDocument, setPdfDocument] = useState<any>(null)\r\n  const searchInputRef = useRef<HTMLInputElement>(null)\r\n\r\n  // Search sidebar state\r\n  const [showSearchSidebar, setShowSearchSidebar] = useState<boolean>(false)\r\n  const searchResultsRef = useRef<HTMLDivElement>(null)\r\n\r\n  // Add these new state variables after the search sidebar state\r\n  const [documentOutline, setDocumentOutline] = useState<OutlineItem[]>([])\r\n  const [expandedOutlineItems, setExpandedOutlineItems] = useState<{ [key: string]: boolean }>({})\r\n  const [bookmarks, setBookmarks] = useState<Bookmark[]>([])\r\n  const [activeTab, setActiveTab] = useState<\"outline\" | \"bookmarks\">(\"outline\")\r\n  const [showBookmarksSidebar, setShowBookmarksSidebar] = useState<boolean>(false)\r\n  const [isAddingBookmark, setIsAddingBookmark] = useState<boolean>(false)\r\n  const [newBookmarkTitle, setNewBookmarkTitle] = useState<string>(\"\")\r\n  const bookmarksRef = useRef<HTMLDivElement>(null)\r\n  const [leftPanel, setLeftPanel] = useState<number>(0)\r\n\r\n  // Add these state variables after the bookmarksRef declaration\r\n  const [leftPanelWidth, setLeftPanelWidth] = useState<number>(220)\r\n  const [isDragging, setIsDragging] = useState<boolean>(false)\r\n  const resizeDividerRef = useRef<HTMLDivElement>(null)\r\n  const startXRef = useRef<number>(0)\r\n  const startWidthRef = useRef<number>(0)\r\n  // Add these new state variables after the existing state declarations\r\n  const [annotations, setAnnotations] = useState<Annotation[]>([])\r\n  const [isAddingAnnotation, setIsAddingAnnotation] = useState<boolean>(false)\r\n  const [annotationType, setAnnotationType] = useState<\"highlight\" | \"note\" | \"drawing\">(\"note\")\r\n  const [annotationColor, setAnnotationColor] = useState<string>(\"#ffeb3b\")\r\n  const [selectedAnnotation, setSelectedAnnotation] = useState<Annotation | null>(null)\r\n  const [newAnnotationContent, setNewAnnotationContent] = useState<string>(\"\")\r\n  const [isDrawing, setIsDrawing] = useState<boolean>(false)\r\n  const [currentDrawingPoints, setCurrentDrawingPoints] = useState<{ x: number; y: number }[]>([])\r\n  const [showAnnotationsSidebar, setShowAnnotationsSidebar] = useState<boolean>(false)\r\n\r\n  // Check if we're on mobile based on the responsive settings\r\n  useEffect(() => {\r\n    const checkMobile = () => {\r\n      setIsMobile(window.innerWidth < (responsive?.mobileBreakpoint || 768))\r\n    }\r\n\r\n    checkMobile()\r\n    window.addEventListener(\"resize\", checkMobile)\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", checkMobile)\r\n    }\r\n  }, [responsive?.mobileBreakpoint])\r\n\r\n  // Set initial sidebar state based on props and responsive settings\r\n  useEffect(() => {\r\n    if (isMobile && responsive?.hideSidebarOnMobile) {\r\n      setSidebar(false)\r\n      setShowSearchSidebar(false)\r\n      setShowBookmarksSidebar(false)\r\n    } else {\r\n      setSidebar(showSidebar || false)\r\n    }\r\n\r\n    // Add event listeners for resize functionality\r\n    const handleMouseMove = (e: MouseEvent) => {\r\n      if (!isDragging) return\r\n\r\n      const deltaX = e.clientX - startXRef.current\r\n      let newWidth = startWidthRef.current + deltaX\r\n\r\n      // Enforce min and max width constraints\r\n      newWidth = Math.max(210, Math.min(400, newWidth))\r\n\r\n      setLeftPanelWidth(newWidth)\r\n    }\r\n\r\n    const handleMouseUp = () => {\r\n      setIsDragging(false)\r\n      document.body.style.cursor = \"default\"\r\n      document.body.style.userSelect = \"auto\"\r\n    }\r\n\r\n    if (isDragging) {\r\n      document.addEventListener(\"mousemove\", handleMouseMove)\r\n      document.addEventListener(\"mouseup\", handleMouseUp)\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousemove\", handleMouseMove)\r\n      document.removeEventListener(\"mouseup\", handleMouseUp)\r\n    }\r\n  }, [isMobile, responsive?.hideSidebarOnMobile, showSidebar, isDragging, showAnnotationsSidebar])\r\n\r\n  // Function to start resizing\r\n  const startResize = (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    setIsDragging(true)\r\n    startXRef.current = e.clientX\r\n    startWidthRef.current = leftPanelWidth\r\n    document.body.style.cursor = \"col-resize\"\r\n    document.body.style.userSelect = \"none\"\r\n  }\r\n\r\n  // Apply fullscreen if set in defaultValues\r\n  useEffect(() => {\r\n    if (defaultValues.fullscreen && viewerRef.current && document.fullscreenElement === null) {\r\n      // Use a small delay to ensure the component is fully mounted\r\n      const timer = setTimeout(() => {\r\n        viewerRef.current?.requestFullscreen().catch((err) => {\r\n          console.warn(\"Couldn't enter fullscreen mode:\", err)\r\n        })\r\n        setFullScreenView(true)\r\n      }, 500)\r\n\r\n      return () => clearTimeout(timer)\r\n    }\r\n  }, [defaultValues.fullscreen])\r\n\r\n  useEffect(() => {\r\n    let retryTimer: ReturnType<typeof setTimeout> | null = null\r\n\r\n    const fetchPdfBlob = async () => {\r\n      try {\r\n        const response = await fetch(data?.url)\r\n        if (!response.ok) throw new Error(\"Failed to fetch PDF\")\r\n\r\n        const blob = await response.blob()\r\n        const url = URL.createObjectURL(blob)\r\n        setPdfBlobUrl(url)\r\n        setRetryCount(0) // Reset retry count on success\r\n\r\n        //remove if existing timeout exist\r\n        if (retryTimer) {\r\n          clearTimeout(retryTimer) // Clear any pending retry\r\n          retryTimer = null\r\n        }\r\n      } catch (error) {\r\n        console.error(`Failed to load PDF (Attempt ${retryCount + 1}):`, error)\r\n        if (retryCount < maxRetries) {\r\n          retryTimer = setTimeout(() => {\r\n            setRetryCount(retryCount + 1)\r\n          }, retryTimeoutDelay) //retry every 30 seconds\r\n          setRetryTimeoutDelay(retryTimeoutDelay * 2)\r\n        }\r\n      }\r\n    }\r\n\r\n    if (data?.url) fetchPdfBlob()\r\n\r\n    return () => {\r\n      if (pdfBlobUrl) URL.revokeObjectURL(pdfBlobUrl)\r\n      if (retryTimer) clearTimeout(retryTimer)\r\n    }\r\n  }, [data?.url, retryCount])\r\n\r\n  const goToPage = useCallback((pageNum: number) => {\r\n    setPreviewNumber(pageNum)\r\n    setPageNumber(pageNum)\r\n    const pageEl = pageRefs.current[pageNum]\r\n    if (pageEl) {\r\n      pageEl.scrollIntoView({ behavior: \"smooth\", block: \"start\" })\r\n    }\r\n  }, [])\r\n\r\n  // Add this function to extract the outline from the PDF document\r\n  // Add this after the onDocumentLoadSuccess function\r\n  const extractOutline = useCallback(async (pdf: any) => {\r\n    try {\r\n      const outline = await pdf.getOutline()\r\n      if (outline && outline.length > 0) {\r\n        // Process the outline to add unique IDs and page numbers\r\n        const processedOutline = await processOutlineItems(outline, pdf)\r\n        setDocumentOutline(processedOutline)\r\n      } else {\r\n        setDocumentOutline([])\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error extracting outline:\", error)\r\n      setDocumentOutline([])\r\n    }\r\n  }, [])\r\n\r\n  // Add this function to process outline items and get their page numbers\r\n  const processOutlineItems = useCallback(async (items: any[], pdf: any, level = 0): Promise<OutlineItem[]> => {\r\n    const processedItems: OutlineItem[] = []\r\n\r\n    for (let i = 0; i < items.length; i++) {\r\n      const item = items[i]\r\n      const id = `outline-${level}-${i}-${Date.now()}`\r\n\r\n      let pageNumber: number | undefined = undefined\r\n\r\n      if (item.dest) {\r\n        try {\r\n          // Try to resolve the destination to get the page number\r\n          if (typeof item.dest === \"string\") {\r\n            const dest = await pdf.getDestination(item.dest)\r\n            if (dest) {\r\n              const ref = await pdf.getPageRef(dest[0])\r\n              const pageIndex = await pdf.getPageIndex(ref)\r\n              pageNumber = pageIndex + 1\r\n            }\r\n          } else if (Array.isArray(item.dest)) {\r\n            // Handle direct destination arrays\r\n            const ref = item.dest[0]\r\n            if (ref) {\r\n              try {\r\n                const pageIndex = await pdf.getPageIndex(ref)\r\n                pageNumber = pageIndex + 1\r\n              } catch (error) {\r\n                console.error(\"Error getting page index from ref:\", error)\r\n              }\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error resolving destination:\", error)\r\n        }\r\n      }\r\n\r\n      const processedItem: OutlineItem = {\r\n        title: item.title,\r\n        dest: item.dest,\r\n        pageNumber,\r\n        id,\r\n        expanded: level < 1, // Expand only the first level by default\r\n      }\r\n\r\n      if (item.items && item.items.length > 0) {\r\n        processedItem.items = await processOutlineItems(item.items, pdf, level + 1)\r\n      }\r\n\r\n      processedItems.push(processedItem)\r\n    }\r\n\r\n    return processedItems\r\n  }, [])\r\n\r\n  async function onDocumentLoadSuccess(pdf: any) {\r\n    setNumPages(pdf.numPages)\r\n    setPdfDocument(pdf)\r\n    const meta = await pdf.getMetadata()\r\n    setMetadata(meta.info)\r\n\r\n    // Extract the document outline\r\n    await extractOutline(pdf)\r\n\r\n    // If default page is set and it's valid, navigate to it\r\n    if (defaultValues.page && defaultValues.page > 1 && defaultValues.page <= pdf.numPages) {\r\n      goToPage(defaultValues.page)\r\n    }\r\n  }\r\n\r\n  // Add this function to toggle the expansion state of an outline item\r\n  const toggleOutlineItem = useCallback((itemId: string) => {\r\n    setExpandedOutlineItems((prev) => ({\r\n      ...prev,\r\n      [itemId]: !prev[itemId],\r\n    }))\r\n  }, [])\r\n\r\n  // Add this function to navigate to an outline item's page\r\n  const navigateToOutlineItem = useCallback(\r\n    async (item: OutlineItem) => {\r\n      if (item.pageNumber) {\r\n        goToPage(item.pageNumber)\r\n      } else if (item.dest && pdfDocument) {\r\n        try {\r\n          // Try to resolve the destination if pageNumber is not available\r\n          let pageNumber: number | undefined = undefined\r\n\r\n          if (typeof item.dest === \"string\") {\r\n            const dest = await pdfDocument.getDestination(item.dest)\r\n            if (dest) {\r\n              const ref = await pdfDocument.getPageRef(dest[0])\r\n              const pageIndex = await pdfDocument.getPageIndex(ref)\r\n              pageNumber = pageIndex + 1\r\n            }\r\n          } else if (Array.isArray(item.dest)) {\r\n            // Handle direct destination arrays\r\n            const ref = item.dest[0]\r\n            if (ref) {\r\n              try {\r\n                const pageIndex = await pdfDocument.getPageIndex(ref)\r\n                pageNumber = pageIndex + 1\r\n              } catch (error) {\r\n                console.error(\"Error getting page index from ref:\", error)\r\n              }\r\n            }\r\n          }\r\n\r\n          if (pageNumber) {\r\n            goToPage(pageNumber)\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error navigating to outline item:\", error)\r\n        }\r\n      }\r\n    },\r\n    [goToPage, pdfDocument],\r\n  )\r\n\r\n  // Add these functions to manage bookmarks\r\n  const addBookmark = useCallback(() => {\r\n    if (!newBookmarkTitle.trim()) return\r\n\r\n    const newBookmark: Bookmark = {\r\n      id: `bookmark-${Date.now()}`,\r\n      title: newBookmarkTitle.trim(),\r\n      pageNumber: pageNumber,\r\n      createdAt: Date.now(),\r\n    }\r\n\r\n    setBookmarks((prev) => [...prev, newBookmark])\r\n    setNewBookmarkTitle(\"\")\r\n    setIsAddingBookmark(false)\r\n\r\n    // Save bookmarks to localStorage\r\n    localStorage.setItem(`pdf-bookmarks-${data?.url}`, JSON.stringify([...bookmarks, newBookmark]))\r\n  }, [newBookmarkTitle, pageNumber, bookmarks, data?.url])\r\n\r\n  const deleteBookmark = useCallback(\r\n    (id: string) => {\r\n      setBookmarks((prev) => {\r\n        const updatedBookmarks = prev.filter((bookmark) => bookmark.id !== id)\r\n        // Save updated bookmarks to localStorage\r\n        localStorage.setItem(`pdf-bookmarks-${data?.url}`, JSON.stringify(updatedBookmarks))\r\n        return updatedBookmarks\r\n      })\r\n    },\r\n    [data?.url],\r\n  )\r\n\r\n  const navigateToBookmark = useCallback(\r\n    (bookmark: Bookmark) => {\r\n      goToPage(bookmark.pageNumber)\r\n    },\r\n    [goToPage],\r\n  )\r\n\r\n  // Add this effect to load bookmarks from localStorage\r\n  useEffect(() => {\r\n    if (data?.url) {\r\n      const savedBookmarks = localStorage.getItem(`pdf-bookmarks-${data?.url}`)\r\n      if (savedBookmarks) {\r\n        try {\r\n          setBookmarks(JSON.parse(savedBookmarks))\r\n        } catch (error) {\r\n          console.error(\"Error parsing saved bookmarks:\", error)\r\n        }\r\n      }\r\n    }\r\n  }, [data?.url])\r\n\r\n  // Add this function to toggle the bookmarks sidebar\r\n  const toggleBookmarksSidebar = useCallback(() => {\r\n    \r\n    setLeftPanel(2);\r\n    setSidebar(true)\r\n    setShowBookmarksSidebar((prev) => !prev)\r\n    if (!showBookmarksSidebar) {\r\n      setActiveTab(\"outline\")\r\n    }\r\n  }, [showBookmarksSidebar])\r\n\r\n  // Add a function to toggle the annotations sidebar after the toggleBookmarksSidebar function\r\n  const toggleAnnotationsSidebar = useCallback(() => {\r\n    \r\n    setLeftPanel(3) // Use a new panel index for annotations\r\n    setSidebar(true)\r\n    setShowAnnotationsSidebar((prev) => !prev)\r\n  }, [showAnnotationsSidebar])\r\n\r\n  function updatePage(__page: number) {\r\n    if (__page > 0 && numPages !== null && __page <= numPages) {\r\n      goToPage(__page)\r\n    } else {\r\n      setPreviewNumber(pageNumber)\r\n    }\r\n  }\r\n\r\n  function updatePDFPage(e: any) {\r\n    const __page = Number(e.target.value)\r\n    setPreviewNumber(__page)\r\n    debounce(() => updatePage(__page), 500)\r\n  }\r\n\r\n  const toggleFullscreen = () => {\r\n    if (!document.fullscreenElement) {\r\n      setFullScreenView(true)\r\n      viewerRef.current?.requestFullscreen().catch((err) => {\r\n        console.warn(\"Couldn't enter fullscreen mode:\", err)\r\n      })\r\n    } else {\r\n      setFullScreenView(false)\r\n      document.exitFullscreen().catch((err) => {\r\n        console.warn(\"Couldn't exit fullscreen mode:\", err)\r\n      })\r\n    }\r\n  }\r\n\r\n  const debounce = (func: any, delay: any) => {\r\n    let timeoutId: any\r\n    return (...args: any[]) => {\r\n      clearTimeout(timeoutId)\r\n      timeoutId = setTimeout(() => {\r\n        func(...args)\r\n      }, delay)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      if (!previewRef.current) return\r\n\r\n      let closestPage: number = pageNumber\r\n\r\n      //@ts-ignore\r\n      Object.entries(pageRefs.current).forEach(([pageNum, pageEl]) => {\r\n        if (pageEl instanceof HTMLElement) {\r\n          const { top, bottom } = pageEl.getBoundingClientRect()\r\n          // Only check pages that are close to the viewport (adjust threshold as needed)\r\n          if (top <= window.innerHeight / 2 && bottom >= 0) {\r\n            closestPage = Number(pageNum)\r\n          }\r\n        }\r\n      })\r\n      setPreviewNumber(closestPage)\r\n      setPageNumber(closestPage)\r\n    }\r\n\r\n    const debouncedHandleScroll = debounce(handleScroll, 500) // Debouncing with a delay of 100ms\r\n\r\n    const scrollContainer = previewRef.current\r\n    if (scrollContainer) {\r\n      scrollContainer.addEventListener(\"scroll\", debouncedHandleScroll)\r\n    }\r\n\r\n    return () => {\r\n      if (scrollContainer) {\r\n        scrollContainer.removeEventListener(\"scroll\", debouncedHandleScroll)\r\n      }\r\n    }\r\n  }, [pageNumber, numPages])\r\n\r\n  // Handle fullscreen change events from browser\r\n  useEffect(() => {\r\n    const handleFullscreenChange = () => {\r\n      if (!document.fullscreenElement && fullScreenView) {\r\n        setFullScreenView(false)\r\n      }\r\n    }\r\n\r\n    document.addEventListener(\"fullscreenchange\", handleFullscreenChange)\r\n    return () => {\r\n      document.removeEventListener(\"fullscreenchange\", handleFullscreenChange)\r\n    }\r\n  }, [fullScreenView])\r\n\r\n  // Add a function to rotate a specific page\r\n  const rotatePage = (pageNum: number, clockwise = true) => {\r\n    setPageRotations((prev) => {\r\n      const currentRotation = prev[pageNum] || 0\r\n      const newRotation = (currentRotation + (clockwise ? 90 : -90)) % 360\r\n      return { ...prev, [pageNum]: newRotation < 0 ? newRotation + 360 : newRotation }\r\n    })\r\n  }\r\n\r\n  // Update the useEffect that runs on component mount to set text layer state\r\n  useEffect(() => {\r\n    setIsTextLayerEnabled(Boolean(textOptions?.enableSelection) || Boolean(textOptions?.enableCopy))\r\n  }, [textOptions?.enableSelection, textOptions?.enableCopy])\r\n\r\n  // Memoize Document options to prevent unnecessary re-renders\r\n  const documentOptions = useMemo(\r\n    () => ({\r\n      cMapUrl: \"https://unpkg.com/pdfjs-dist@3.4.120/cmaps/\",\r\n      cMapPacked: true,\r\n      standardFontDataUrl: \"https://unpkg.com/pdfjs-dist@3.4.120/standard_fonts/\",\r\n    }),\r\n    [],\r\n  )\r\n\r\n  // Handle document load error\r\n  const onDocumentLoadError = useCallback(() => {\r\n    console.error(`Failed to load PDF (Attempt ${retryCount + 1})`)\r\n    if (retryCount < maxRetries) {\r\n      setRetryCount((prev) => prev + 1)\r\n    }\r\n  }, [retryCount, maxRetries])\r\n\r\n  // Replace the handlePrint function with a direct call to printPdf\r\n  const handlePrint = useCallback(() => {\r\n    printPdf()\r\n  }, [])\r\n\r\n  // Update the printPdf function to remove dialog handling\r\n  const printPdf = useCallback(() => {\r\n    try {\r\n      console.log(\"Printing PDF directly from the viewer\")\r\n\r\n      // Store the current zoom level\r\n      setOriginalZoom(scale)\r\n\r\n      // Set a print-friendly zoom level (1 = 100%)\r\n      setScale(1)\r\n\r\n      // Set printing mode to apply print-specific styles\r\n      setIsPrinting(true)\r\n\r\n      // Use setTimeout to ensure the print styles are applied and zoom is updated\r\n      setTimeout(() => {\r\n        // Trigger browser print dialog\r\n        window.print()\r\n\r\n        // Reset printing mode and restore zoom after a delay\r\n        setTimeout(() => {\r\n          setIsPrinting(false)\r\n          // Restore the original zoom level\r\n          if (originalZoom !== null) {\r\n            setScale(originalZoom)\r\n            setOriginalZoom(null)\r\n          }\r\n        }, 1000)\r\n      }, 300) // Increased timeout to ensure zoom change is applied\r\n    } catch (error) {\r\n      console.error(\"Error in print function:\", error)\r\n      setIsPrinting(false)\r\n      // Restore zoom if there's an error\r\n      if (originalZoom !== null) {\r\n        setScale(originalZoom)\r\n        setOriginalZoom(null)\r\n      }\r\n      alert(\"An error occurred while trying to print. Please try again.\")\r\n    }\r\n  }, [originalZoom, scale])\r\n\r\n  // Update the useEffect for print styles to include better page sizing\r\n  useEffect(() => {\r\n    if (isPrinting) {\r\n      // Create a style element for print styles\r\n      const style = document.createElement(\"style\")\r\n      style.id = \"adex-print-styles\"\r\n      style.innerHTML = `\r\n        @media print {\r\n          body * {\r\n            visibility: hidden;\r\n          }\r\n          .adex-viewer, .adex-viewer * {\r\n            visibility: visible;\r\n          }\r\n          .adex-viewer {\r\n            position: absolute;\r\n            left: 0;\r\n            top: 0;\r\n            width: 100%;\r\n            border: none !important;\r\n          }\r\n          .adex-topbar, .adex-power-row, .adex-preview-thumbs, .adex-preview-search, .adex-preview-bookmarks, .adex-pdf-meta-info,.adex-left-col,.adex-preview-annotations {\r\n            display: none !important;\r\n          }\r\n          .adex-preview-panel {\r\n            display: block !important;\r\n            grid-template-columns: auto !important;\r\n          }\r\n          .adex-preview {\r\n            max-height: none !important;\r\n            overflow: visible !important;\r\n            padding: 0 !important;\r\n          }\r\n          .adex-page {\r\n            page-break-after: always;\r\n            margin: 0 !important;\r\n            box-shadow: none !important;\r\n            width: 100% !important;\r\n            height: auto !important;\r\n          }\r\n          .adex-page canvas {\r\n            width: 100% !important;\r\n            height: auto !important;\r\n            max-width: 100% !important;\r\n          }\r\n        }\r\n      `\r\n      document.head.appendChild(style)\r\n\r\n      return () => {\r\n        // Clean up the style when done printing\r\n        const styleElement = document.getElementById(\"adex-print-styles\")\r\n        if (styleElement) {\r\n          document.head.removeChild(styleElement)\r\n        }\r\n      }\r\n    }\r\n  }, [isPrinting])\r\n\r\n  // Toggle search bar visibility\r\n  const toggleSearch = useCallback(() => {\r\n    \r\n    setLeftPanel(1)\r\n    setSidebar(true)\r\n    setShowSearch((prev) => {\r\n      const newState = !prev\r\n      if (newState && searchInputRef.current) {\r\n        // Focus the search input when opening\r\n        setTimeout(() => {\r\n          searchInputRef.current?.focus()\r\n        }, 100)\r\n      }\r\n      return newState\r\n    })\r\n    // Clear search results when closing\r\n    if (showSearch) {\r\n      setSearchQuery(\"\")\r\n      setSearchResults([])\r\n      setCurrentSearchResult(-1)\r\n      setShowSearchSidebar(false)\r\n    }\r\n  }, [showSearch])\r\n\r\n  // Move the getContextAroundMatch function before performSearch\r\n  // Helper function to get context around a match\r\n  const getContextAroundMatch = (text: string, matchIndex: number, matchLength: number, contextLength = 30) => {\r\n    const startIndex = Math.max(0, matchIndex - contextLength)\r\n    const endIndex = Math.min(text.length, matchIndex + matchLength + contextLength)\r\n\r\n    let context = text.substring(startIndex, endIndex)\r\n\r\n    // Add ellipsis if we're not at the beginning or end\r\n    if (startIndex > 0) context = \"...\" + context\r\n    if (endIndex < text.length) context = context + \"...\"\r\n\r\n    return context\r\n  }\r\n\r\n  // Handle search input change\r\n  const handleSearchChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchQuery(e.target.value)\r\n  }, [])\r\n\r\n  // Update the navigateToSearchResult function to add null checks\r\n  const navigateToSearchResult = useCallback(\r\n    (result: SearchResult) => {\r\n      if (!result) return\r\n\r\n      // Navigate to the page containing the result\r\n      goToPage(result.pageIndex + 1)\r\n\r\n      // Scroll to the result position\r\n      setTimeout(() => {\r\n        const pageElement = pageRefs.current[result.pageIndex + 1]\r\n        if (!pageElement) return\r\n\r\n        // Get the text layer\r\n        const textLayer = pageElement.querySelector(\".react-pdf__Page__textContent\")\r\n        if (!textLayer) return\r\n\r\n        // Clear all existing highlights first\r\n        document.querySelectorAll(\".adex-search-highlight\").forEach((el) => {\r\n          el.remove()\r\n        })\r\n\r\n        // Find all text spans in the text layer\r\n        const textSpans = textLayer.querySelectorAll(\"span\")\r\n        if (!textSpans || textSpans.length === 0) return\r\n\r\n        // Convert search query to lowercase for case-insensitive comparison\r\n        const searchLower = searchQuery.toLowerCase()\r\n\r\n        // Track if we've found the current result\r\n        let foundCurrentResult = false\r\n        let highlightElement = null\r\n\r\n        // Loop through all text spans to find matches\r\n        for (let i = 0; i < textSpans.length; i++) {\r\n          const span = textSpans[i]\r\n          const text = span.textContent || \"\"\r\n          const textLower = text.toLowerCase()\r\n\r\n          let startIndex = 0\r\n          let index\r\n\r\n          // Find all instances of the search query in this span\r\n          while ((index = textLower.indexOf(searchLower, startIndex)) !== -1) {\r\n            // Create a highlight element\r\n            const highlight = document.createElement(\"div\")\r\n            highlight.className = \"adex-search-highlight\"\r\n\r\n            // Get the position of the span\r\n            const rect = span.getBoundingClientRect()\r\n            const textLayerRect = textLayer.getBoundingClientRect()\r\n\r\n            // Calculate the relative position within the text layer\r\n            const left = rect.left - textLayerRect.left\r\n            const top = rect.top - textLayerRect.top\r\n\r\n            // Set the position and size\r\n            highlight.style.left = `${left}px`\r\n            highlight.style.top = `${top}px`\r\n            highlight.style.width = `${rect.width}px`\r\n            highlight.style.height = `${rect.height}px`\r\n\r\n            // Add a unique ID for the current result\r\n            const resultId = `search-highlight-${result.matchIndex}-${i}-${index}`\r\n            highlight.id = resultId\r\n\r\n            // Check if this is the current result\r\n            if (!foundCurrentResult && result.text.toLowerCase() === searchLower) {\r\n              highlight.classList.add(\"current\")\r\n              highlightElement = highlight\r\n              foundCurrentResult = true\r\n            }\r\n\r\n            // Add the highlight to the text layer\r\n            textLayer.appendChild(highlight)\r\n\r\n            // Move to the next potential match in this span\r\n            startIndex = index + searchLower.length\r\n          }\r\n        }\r\n\r\n        // If we found the current result, scroll to it\r\n        if (highlightElement) {\r\n          highlightElement.scrollIntoView({\r\n            behavior: \"smooth\",\r\n            block: \"center\",\r\n          })\r\n        }\r\n\r\n        // Highlight the corresponding result in the sidebar\r\n        if (searchResultsRef.current) {\r\n          const resultElement = searchResultsRef.current.querySelector(`#search-result-${result.matchIndex}`)\r\n          if (resultElement) {\r\n            // Remove active class from all results\r\n            searchResultsRef.current.querySelectorAll(\".adex-search-result-item\").forEach((el) => {\r\n              el.classList.remove(\"active\")\r\n            })\r\n            // Add active class to current result\r\n            resultElement.classList.add(\"active\")\r\n            // Scroll the result into view in the sidebar\r\n            resultElement.scrollIntoView({ behavior: \"smooth\", block: \"nearest\" })\r\n          }\r\n        }\r\n      }, 300) // Increased timeout to ensure the page is fully rendered\r\n    },\r\n    [goToPage, searchQuery],\r\n  )\r\n\r\n  // Add a check in the handleSearchKeyDown function to prevent searching when document isn't ready\r\n  // Move the handleSearchKeyDown function after performSearch\r\n  // First, remove the current handleSearchKeyDown function\r\n  // Now define performSearch first\r\n  const performSearch = useCallback(async () => {\r\n    if (!searchQuery.trim() || !pdfDocument) {\r\n      // Exit early if there's no search query or no PDF document\r\n      return\r\n    }\r\n\r\n    setIsSearching(true)\r\n    setSearchResults([])\r\n    setCurrentSearchResult(-1)\r\n\r\n    try {\r\n      const results: SearchResult[] = []\r\n\r\n      // Check if the PDF document is still valid\r\n      if (!pdfDocument || !pdfDocument.numPages) {\r\n        throw new Error(\"PDF document is not available or fully loaded\")\r\n      }\r\n\r\n      // Search through each page\r\n      for (let i = 1; i <= pdfDocument.numPages; i++) {\r\n        try {\r\n          // Add null check before getting the page\r\n          const page = await pdfDocument.getPage(i)\r\n\r\n          if (!page) {\r\n            console.warn(`Page ${i} could not be loaded, skipping`)\r\n            continue\r\n          }\r\n\r\n          const textContent = await page.getTextContent()\r\n          const viewport = page.getViewport({ scale: 1.0 }) // Use scale 1.0 for base coordinates\r\n\r\n          // Extract full page text for context\r\n          const pageText = textContent.items.map((item: any) => item.str).join(\" \")\r\n\r\n          // Search for matches in the text\r\n          const searchRegex = new RegExp(searchQuery, \"gi\")\r\n          let match\r\n\r\n          while ((match = searchRegex.exec(pageText)) !== null) {\r\n            // Get context around the match\r\n            const context = getContextAroundMatch(pageText, match.index, searchQuery.length)\r\n\r\n            // Store the match information\r\n            results.push({\r\n              pageIndex: i - 1,\r\n              matchIndex: results.length,\r\n              text: match[0],\r\n              context: context,\r\n              position: {\r\n                left: 0,\r\n                top: 0,\r\n                right: 0,\r\n                bottom: 0,\r\n              },\r\n            })\r\n          }\r\n        } catch (pageError) {\r\n          console.warn(`Error processing page ${i} during search:`, pageError)\r\n          // Continue with the next page instead of failing the entire search\r\n          continue\r\n        }\r\n      }\r\n\r\n      setSearchResults(results)\r\n      if (results.length > 0) {\r\n        setCurrentSearchResult(0)\r\n        navigateToSearchResult(results[0])\r\n        // Show search sidebar if we have results\r\n        setShowSearchSidebar(true)\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error searching PDF:\", error)\r\n      // Show a user-friendly error message\r\n      alert(\"There was an error while searching. Please try again after the document is fully loaded.\")\r\n    } finally {\r\n      setIsSearching(false)\r\n    }\r\n  }, [searchQuery, pdfDocument, navigateToSearchResult])\r\n\r\n  // Then define handleSearchKeyDown after performSearch\r\n  const handleSearchKeyDown = useCallback(\r\n    (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n      if (e.key === \"Enter\") {\r\n        if (!pdfDocument || !pdfDocument.numPages) {\r\n          alert(\"Please wait for the document to fully load before searching.\")\r\n          return\r\n        }\r\n        performSearch()\r\n      }\r\n    },\r\n    [pdfDocument, performSearch],\r\n  )\r\n\r\n  // Add these navigation functions that are referenced but missing:\r\n  const nextSearchResult = useCallback(() => {\r\n    if (searchResults.length === 0) return\r\n\r\n    const nextIndex = (currentSearchResult + 1) % searchResults.length\r\n    setCurrentSearchResult(nextIndex)\r\n    navigateToSearchResult(searchResults[nextIndex])\r\n  }, [currentSearchResult, searchResults, navigateToSearchResult])\r\n\r\n  const prevSearchResult = useCallback(() => {\r\n    if (searchResults.length === 0) return\r\n\r\n    const prevIndex = (currentSearchResult - 1 + searchResults.length) % searchResults.length\r\n    setCurrentSearchResult(prevIndex)\r\n    navigateToSearchResult(searchResults[prevIndex])\r\n  }, [currentSearchResult, searchResults, navigateToSearchResult])\r\n\r\n  // Highlight all search results on the current page\r\n  const highlightAllResultsOnPage = useCallback(\r\n    (pageIndex: number) => {\r\n      const pageElement = pageRefs.current[pageIndex + 1]\r\n      if (!pageElement) return\r\n\r\n      const textLayer = pageElement.querySelector(\".react-pdf__Page__textContent\")\r\n      if (!textLayer) return\r\n\r\n      // Clear existing highlights on this page\r\n      pageElement.querySelectorAll(\".adex-search-highlight\").forEach((el) => el.remove())\r\n\r\n      // If no search query or results, exit\r\n      if (!searchQuery || searchResults.length === 0) return\r\n\r\n      // Find all text spans in the text layer\r\n      const textSpans = textLayer.querySelectorAll(\"span\")\r\n      if (!textSpans || textSpans.length === 0) return\r\n\r\n      // Convert search query to lowercase for case-insensitive comparison\r\n      const searchLower = searchQuery.toLowerCase()\r\n\r\n      // Loop through all text spans to find matches\r\n      for (let i = 0; i < textSpans.length; i++) {\r\n        const span = textSpans[i]\r\n        const text = span.textContent || \"\"\r\n        const textLower = text.toLowerCase()\r\n\r\n        let startIndex = 0\r\n        let index: any\r\n\r\n        // Find all instances of the search query in this span\r\n        while ((index = textLower.indexOf(searchLower, startIndex)) !== -1) {\r\n          // Create a highlight element\r\n          const highlight = document.createElement(\"div\")\r\n          highlight.className = \"adex-search-highlight\"\r\n\r\n          // Get the position of the span\r\n          const rect = span.getBoundingClientRect()\r\n          const textLayerRect = textLayer.getBoundingClientRect()\r\n\r\n          // Calculate the relative position within the text layer\r\n          const left = rect.left - textLayerRect.left\r\n          const top = rect.top - textLayerRect.top\r\n\r\n          // Set the position and size\r\n          highlight.style.left = `${left}px`\r\n          highlight.style.top = `${top}px`\r\n          highlight.style.width = `${rect.width}px`\r\n          highlight.style.height = `${rect.height}px`\r\n\r\n          // Check if this is the current result\r\n          const isCurrentResult = searchResults.some(\r\n            (result) =>\r\n              result.pageIndex === pageIndex &&\r\n              result.matchIndex === currentSearchResult &&\r\n              result.text.toLowerCase() === text.substring(index, index + searchLower.length).toLowerCase(),\r\n          )\r\n\r\n          if (isCurrentResult) {\r\n            highlight.classList.add(\"current\")\r\n          }\r\n\r\n          // Add the highlight to the text layer\r\n          textLayer.appendChild(highlight)\r\n\r\n          // Move to the next potential match in this span\r\n          startIndex = index + searchLower.length\r\n        }\r\n      }\r\n    },\r\n    [searchQuery, searchResults, currentSearchResult],\r\n  )\r\n\r\n  // Highlight results when page changes\r\n  useEffect(() => {\r\n    if (searchResults.length > 0 && pageNumber > 0) {\r\n      highlightAllResultsOnPage(pageNumber - 1)\r\n    }\r\n  }, [pageNumber, searchResults, highlightAllResultsOnPage])\r\n\r\n  // Add this new function to update highlights when scale changes\r\n  useEffect(() => {\r\n    if (searchResults.length > 0 && pageNumber > 0) {\r\n      // Use a timeout to ensure the page has been re-rendered with the new scale\r\n      const timer = setTimeout(() => {\r\n        highlightAllResultsOnPage(pageNumber - 1)\r\n      }, 100)\r\n\r\n      return () => clearTimeout(timer)\r\n    }\r\n  }, [scale, pageNumber, searchResults, highlightAllResultsOnPage])\r\n\r\n  // Add this CSS class to the style element\r\n  const searchHighlightStyles = `\r\n.adex-search-highlight {\r\n  position: absolute;\r\n  background-color: rgba(255, 255, 0, 0.4);\r\n  border-radius: 2px;\r\n  z-index: 10;\r\n  pointer-events: none;\r\n}\r\n\r\n.adex-search-highlight.current {\r\n  background-color: rgba(255, 165, 0, 0.6);\r\n  box-shadow: 0 0 0 2px rgba(255, 165, 0, 0.8);\r\n  z-index: 11;\r\n}\r\n`\r\n\r\n  // Add this useEffect inside the component, before the return statement\r\n  // Add this right before the renderOutlineItems function\r\n\r\n  // Initialize expanded state for outline items\r\n  useEffect(() => {\r\n    if (documentOutline.length > 0) {\r\n      // Initialize expanded state for all outline items\r\n      const initialExpandedState: { [key: string]: boolean } = {}\r\n\r\n      const initializeExpandedState = (items: OutlineItem[], level: number) => {\r\n        items.forEach((item) => {\r\n          // Expand only the first level by default\r\n          initialExpandedState[item.id] = level === 0\r\n\r\n          if (item.items && item.items.length > 0) {\r\n            initializeExpandedState(item.items, level + 1)\r\n          }\r\n        })\r\n      }\r\n\r\n      initializeExpandedState(documentOutline, 0)\r\n      setExpandedOutlineItems(initialExpandedState)\r\n    }\r\n  }, [documentOutline])\r\n\r\n  // Add this function to render outline items recursively\r\n  // Add this function before the return statement\r\n  const renderOutlineItems = (items: OutlineItem[]) => {\r\n    return items.map((item) => (\r\n      <div key={item.id} className=\"adex-outline-item\">\r\n        <div className=\"adex-outline-item-content\">\r\n          {item.items && item.items.length > 0 ? (\r\n            <button\r\n              className=\"adex-outline-toggle\"\r\n              onClick={() => toggleOutlineItem(item.id)}\r\n              aria-label={expandedOutlineItems[item.id] ? \"Collapse\" : \"Expand\"}\r\n            >\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                fill=\"currentColor\"\r\n                viewBox=\"0 0 16 16\"\r\n                style={{\r\n                  transform: expandedOutlineItems[item.id] ? \"rotate(90deg)\" : \"rotate(0deg)\",\r\n                }}\r\n              >\r\n                <path d=\"M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z\" />\r\n              </svg>\r\n            </button>\r\n          ) : (\r\n            <span className=\"adex-outline-toggle\" style={{ width: \"20px\" }}></span>\r\n          )}\r\n          <button\r\n            className=\"adex-outline-link\"\r\n            onClick={() => navigateToOutlineItem(item)}\r\n            disabled={!item.pageNumber && !item.dest}\r\n          >\r\n            {item.title}\r\n            {item.pageNumber && <span className=\"adex-outline-page\">p. {item.pageNumber}</span>}\r\n          </button>\r\n        </div>\r\n\r\n        {item.items && item.items.length > 0 && expandedOutlineItems[item.id] && (\r\n          <div className=\"adex-outline-children\" style={{ marginLeft: \"20px\" }}>\r\n            {renderOutlineItems(item.items)}\r\n          </div>\r\n        )}\r\n      </div>\r\n    ))\r\n  }\r\n\r\n  // Add a function to start adding an annotation\r\n  const startAddingAnnotation = useCallback((type: \"highlight\" | \"note\" | \"drawing\") => {\r\n    setIsAddingAnnotation(true)\r\n    setAnnotationType(type)\r\n    setNewAnnotationContent(\"\")\r\n  }, [])\r\n\r\n  const cancelAddingAnnotation = useCallback(() => {\r\n    setIsAddingAnnotation(false)\r\n    setCurrentDrawingPoints([])\r\n  }, [])\r\n\r\n  const addAnnotation = useCallback(\r\n    (pageNumber: number, position: { x: number; y: number; width?: number; height?: number }) => {\r\n      if (annotationType === \"drawing\" && currentDrawingPoints.length < 2) {\r\n        return // Need at least 2 points for a drawing\r\n      }\r\n\r\n      const newAnnotation: Annotation = {\r\n        id: `annotation-${Date.now()}`,\r\n        pageNumber,\r\n        type: annotationType,\r\n        content: newAnnotationContent,\r\n        color: annotationColor,\r\n        position,\r\n        points: annotationType === \"drawing\" ? currentDrawingPoints : undefined,\r\n        createdAt: Date.now(),\r\n      }\r\n\r\n      setAnnotations((prev) => {\r\n        const updatedAnnotations = [...prev, newAnnotation]\r\n        // Save annotations to localStorage\r\n        localStorage.setItem(`pdf-annotations-${data?.url}`, JSON.stringify(updatedAnnotations))\r\n        return updatedAnnotations\r\n      })\r\n\r\n      setIsAddingAnnotation(false)\r\n      setCurrentDrawingPoints([])\r\n      setNewAnnotationContent(\"\")\r\n    },\r\n    [annotationType, newAnnotationContent, annotationColor, currentDrawingPoints, data?.url],\r\n  )\r\n\r\n  const deleteAnnotation = useCallback(\r\n    (id: string) => {\r\n      setAnnotations((prev) => {\r\n        const updatedAnnotations = prev.filter((annotation) => annotation.id !== id)\r\n        // Save updated annotations to localStorage\r\n        localStorage.setItem(`pdf-annotations-${data?.url}`, JSON.stringify(updatedAnnotations))\r\n        return updatedAnnotations\r\n      })\r\n\r\n      if (selectedAnnotation?.id === id) {\r\n        setSelectedAnnotation(null)\r\n      }\r\n    },\r\n    [selectedAnnotation, data?.url],\r\n  )\r\n\r\n  const updateAnnotation = useCallback(\r\n    (id: string, updates: Partial<Annotation>) => {\r\n      setAnnotations((prev) => {\r\n        const updatedAnnotations = prev.map((annotation) =>\r\n          annotation.id === id ? { ...annotation, ...updates } : annotation,\r\n        )\r\n        // Save updated annotations to localStorage\r\n        localStorage.setItem(`pdf-annotations-${data?.url}`, JSON.stringify(updatedAnnotations))\r\n        return updatedAnnotations\r\n      })\r\n\r\n      if (selectedAnnotation?.id === id) {\r\n        setSelectedAnnotation((prev) => (prev ? { ...prev, ...updates } : null))\r\n      }\r\n    },\r\n    [selectedAnnotation, data?.url],\r\n  )\r\n\r\n  const handleDrawingMouseDown = useCallback(\r\n    (e: React.MouseEvent, pageNumber: number) => {\r\n      if (isAddingAnnotation && annotationType === \"drawing\") {\r\n        setIsDrawing(true)\r\n        const target = e.currentTarget as HTMLElement\r\n        const rect = target.getBoundingClientRect()\r\n        const x = (e.clientX - rect.left) / scale\r\n        const y = (e.clientY - rect.top) / scale\r\n        setCurrentDrawingPoints([{ x, y }])\r\n      }\r\n    },\r\n    [isAddingAnnotation, annotationType, scale],\r\n  )\r\n\r\n  const handleDrawingMouseMove = useCallback(\r\n    (e: React.MouseEvent) => {\r\n      if (isDrawing && isAddingAnnotation && annotationType === \"drawing\") {\r\n        const target = e.currentTarget as HTMLElement\r\n        const rect = target.getBoundingClientRect()\r\n        const x = (e.clientX - rect.left) / scale\r\n        const y = (e.clientY - rect.top) / scale\r\n        setCurrentDrawingPoints((prev) => [...prev, { x, y }])\r\n      }\r\n    },\r\n    [isDrawing, isAddingAnnotation, annotationType, scale],\r\n  )\r\n\r\n  // Now let's improve the handleDrawingMouseUp function to ensure proper dimensions\r\n  // Find the handleDrawingMouseUp function and replace it with:\r\n\r\n  const handleDrawingMouseUp = useCallback(\r\n    (e: React.MouseEvent, pageNumber: number) => {\r\n      if (isDrawing && isAddingAnnotation && annotationType === \"drawing\") {\r\n        setIsDrawing(false)\r\n\r\n        // Need at least 2 points for a drawing\r\n        if (currentDrawingPoints.length < 2) {\r\n          return\r\n        }\r\n\r\n        // Calculate bounding box for the drawing\r\n        const minX = Math.min(...currentDrawingPoints.map((p) => p.x))\r\n        const minY = Math.min(...currentDrawingPoints.map((p) => p.y))\r\n        const maxX = Math.max(...currentDrawingPoints.map((p) => p.x))\r\n        const maxY = Math.max(...currentDrawingPoints.map((p) => p.y))\r\n\r\n        // Ensure we have some minimum dimensions\r\n        const width = Math.max(maxX - minX, 1)\r\n        const height = Math.max(maxY - minY, 1)\r\n\r\n        // Create a deep copy of the points array and adjust coordinates relative to the bounding box\r\n        const adjustedPoints = currentDrawingPoints.map((point) => ({\r\n          x: point.x - minX,\r\n          y: point.y - minY,\r\n        }))\r\n\r\n        const newAnnotation: Annotation = {\r\n          id: `annotation-${Date.now()}`,\r\n          pageNumber,\r\n          type: \"drawing\",\r\n          content: \"\",\r\n          color: annotationColor,\r\n          position: {\r\n            x: minX,\r\n            y: minY,\r\n            width: width,\r\n            height: height,\r\n          },\r\n          points: adjustedPoints,\r\n          createdAt: Date.now(),\r\n        }\r\n\r\n        setAnnotations((prev) => {\r\n          const updatedAnnotations = [...prev, newAnnotation]\r\n          // Save annotations to localStorage\r\n          localStorage.setItem(`pdf-annotations-${data?.url}`, JSON.stringify(updatedAnnotations))\r\n          return updatedAnnotations\r\n        })\r\n\r\n        setIsAddingAnnotation(false)\r\n        setCurrentDrawingPoints([])\r\n      }\r\n    },\r\n    [isDrawing, isAddingAnnotation, annotationType, currentDrawingPoints, annotationColor, data?.url],\r\n  )\r\n\r\n  const handlePageClick = useCallback(\r\n    (e: React.MouseEvent, pageNumber: number) => {\r\n      if (isAddingAnnotation && annotationType === \"note\") {\r\n        const target = e.currentTarget as HTMLElement\r\n        const rect = target.getBoundingClientRect()\r\n        const x = (e.clientX - rect.left) / scale\r\n        const y = (e.clientY - rect.top) / scale\r\n\r\n        addAnnotation(pageNumber, { x, y })\r\n      }\r\n    },\r\n    [isAddingAnnotation, annotationType, scale, addAnnotation],\r\n  )\r\n\r\n  const handleTextSelection = useCallback(\r\n    (pageNumber: number) => {\r\n      if (isAddingAnnotation && annotationType === \"highlight\") {\r\n        const selection = window.getSelection()\r\n        if (!selection || selection.rangeCount === 0) return\r\n\r\n        const range = selection.getRangeAt(0)\r\n        const rects = range.getClientRects() // Call getClientRects() on the range, not the selection\r\n        if (rects.length === 0) return\r\n\r\n        // Get the page element\r\n        const pageElement = pageRefs.current[pageNumber]\r\n        if (!pageElement) return\r\n\r\n        const pageRect = pageElement.getBoundingClientRect()\r\n\r\n        // Calculate the position relative to the page\r\n        const firstRect = rects[0]\r\n        const lastRect = rects[rects.length - 1]\r\n\r\n        const x = (firstRect.left - pageRect.left) / scale\r\n        const y = (firstRect.top - pageRect.top) / scale\r\n        const width = (lastRect.right - firstRect.left) / scale\r\n        const height = Math.max(...Array.from(rects).map((r) => r.height)) / scale\r\n\r\n        addAnnotation(pageNumber, { x, y, width, height })\r\n\r\n        // Clear the selection\r\n        selection.removeAllRanges()\r\n      }\r\n    },\r\n    [isAddingAnnotation, annotationType, scale, addAnnotation],\r\n  )\r\n\r\n  // Add an effect to load annotations from localStorage\r\n  useEffect(() => {\r\n    if (data?.url) {\r\n      const savedAnnotations = localStorage.getItem(`pdf-annotations-${data?.url}`)\r\n      if (savedAnnotations) {\r\n        try {\r\n          setAnnotations(JSON.parse(savedAnnotations))\r\n        } catch (error) {\r\n          console.error(\"Error parsing saved annotations:\", error)\r\n        }\r\n      }\r\n    }\r\n  }, [data?.url])\r\n\r\n  const renderAnnotations = useCallback(\r\n    (pageNumber: number) => {\r\n      const pageAnnotations = annotations.filter((a) => a.pageNumber === pageNumber)\r\n\r\n      return pageAnnotations.map((annotation) => {\r\n        const { id, type, position, color, content, points } = annotation\r\n\r\n        if (type === \"note\") {\r\n          return (\r\n            <div\r\n              key={id}\r\n              data-id={id}\r\n              className=\"adex-annotation adex-note-annotation\"\r\n              style={{\r\n                position: \"absolute\",\r\n                left: `${position.x * scale}px`,\r\n                top: `${position.y * scale}px`,\r\n                zIndex: 100,\r\n                cursor: \"pointer\",\r\n                background: color\r\n              }}\r\n              onClick={() => {setSelectedAnnotation(annotation), setSidebar(true), setLeftPanel(3)}}\r\n            >\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M2.5 1A1.5 1.5 0 0 0 1 2.5v11A1.5 1.5 0 0 0 2.5 15h6.086a1.5 1.5 0 0 0 1.06-.44l4.915-4.914A1.5 1.5 0 0 0 15 8.586V2.5A1.5 1.5 0 0 0 13.5 1zm6 8.5a1 1 0 0 1 1-1h4.396a.25.25 0 0 1 .177.427l-5.146 5.146a.25.25 0 0 1-.427-.177z\"/>\r\n              </svg>\r\n            </div>\r\n          )\r\n        }\r\n\r\n        if (type === \"highlight\") {\r\n          return (\r\n            <div\r\n              key={id}\r\n              data-id={id}\r\n              className=\"adex-annotation adex-highlight-annotation\"\r\n              style={{\r\n                position: \"absolute\",\r\n                left: `${position.x * scale}px`,\r\n                top: `${position.y * scale}px`,\r\n                width: `${(position.width || 0) * scale}px`,\r\n                height: `${(position.height || 0) * scale}px`,\r\n                backgroundColor: color,\r\n                opacity: 0.3,\r\n                zIndex: 50,\r\n                pointerEvents: \"none\",\r\n              }}\r\n              onClick={() => {setSelectedAnnotation(annotation), setSidebar(true), setLeftPanel(3)}}\r\n            />\r\n          )\r\n        }\r\n\r\n        if (type === \"drawing\" && points && points.length > 1) {\r\n          // Create SVG path from points\r\n          const pathData = points.reduce((path, point, index) => {\r\n            return path + (index === 0 ? `M ${point.x} ${point.y}` : ` L ${point.x} ${point.y}`)\r\n          }, \"\")\r\n\r\n          return (\r\n            <svg\r\n              key={id}\r\n              data-id={id}\r\n              className=\"adex-annotation adex-drawing-annotation\"\r\n              style={{\r\n                position: \"absolute\",\r\n                left: `${position.x * scale}px`,\r\n                top: `${position.y * scale}px`,\r\n                width: `${(position.width || 0) * scale}px`,\r\n                height: `${(position.height || 0) * scale}px`,\r\n                zIndex: 75,\r\n                pointerEvents: \"auto\", // Change from \"none\" to \"auto\" to make it clickable\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => {setSelectedAnnotation(annotation), setSidebar(true), setLeftPanel(3)}}\r\n            >\r\n              <path\r\n                d={pathData}\r\n                stroke={color}\r\n                strokeWidth=\"2\"\r\n                fill=\"none\"\r\n                vectorEffect=\"non-scaling-stroke\"\r\n                transform={`scale(${scale})`}\r\n              />\r\n            </svg>\r\n          )\r\n        }\r\n\r\n        return null\r\n      })\r\n    },\r\n    [annotations, scale],\r\n  )\r\n\r\n  // Let's also update the renderCurrentDrawing function to make it more visible\r\n  // Find the renderCurrentDrawing function and replace it with:\r\n\r\n  const renderCurrentDrawing = useCallback(() => {\r\n    if (!isDrawing || currentDrawingPoints.length < 2) return null\r\n\r\n    // Create SVG path from points\r\n    const pathData = currentDrawingPoints.reduce((path, point, index) => {\r\n      return path + (index === 0 ? `M ${point.x} ${point.y}` : ` L ${point.x} ${point.y}`)\r\n    }, \"\")\r\n\r\n    return (\r\n      <svg\r\n        className=\"adex-current-drawing\"\r\n        style={{\r\n          position: \"absolute\",\r\n          left: 0,\r\n          top: 0,\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          zIndex: 75,\r\n          pointerEvents: \"none\",\r\n        }}\r\n      >\r\n        <path\r\n          d={pathData}\r\n          stroke={annotationColor}\r\n          strokeWidth=\"3\"\r\n          fill=\"none\"\r\n          vectorEffect=\"non-scaling-stroke\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n      </svg>\r\n    )\r\n  }, [isDrawing, currentDrawingPoints, annotationColor])\r\n\r\n  const renderAnnotationDetail = useCallback(\r\n    (annotation: Annotation) => {\r\n      return (\r\n        <div className=\"adex-annotation-detail\">\r\n          <div className=\"adex-annotation-detail-header\">\r\n            <div className=\"adex-annotation-detail-actions\">\r\n              \r\n              {/* <button\r\n                className=\"adex-annotation-close\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation()\r\n                  setSelectedAnnotation(null)\r\n                }}\r\n                aria-label=\"Close annotation detail\"\r\n              >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n                  <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\r\n                </svg>\r\n              </button> */}\r\n            </div>\r\n          </div>\r\n          <div className=\"adex-annotation-detail-content\">\r\n            {(annotation.type === \"note\" || annotation.type === \"highlight\") && (\r\n              <div className=\"adex-annotation-content-editor\">\r\n                <textarea\r\n                  value={annotation.content || \"\"}\r\n                  onChange={(e) => updateAnnotation(annotation.id, { content: e.target.value })}\r\n                  placeholder=\"Add a note...\"\r\n                  onClick={(e) => e.stopPropagation()}\r\n                />\r\n              </div>\r\n            )}\r\n            <div className=\"adex-annotation-color-picker\">\r\n              <div className=\"adex-color-options\">\r\n                {[\"#ffeb3b\", \"#4caf50\", \"#2196f3\", \"#f44336\", \"#9c27b0\"].map((color) => (\r\n                  <button\r\n                    key={color}\r\n                    className={`adex-color-option ${annotation.color === color ? \"active\" : \"\"}`}\r\n                    style={{ backgroundColor: color }}\r\n                    onClick={(e) => {\r\n                      e.stopPropagation()\r\n                      updateAnnotation(annotation.id, { color })\r\n                    }}\r\n                    aria-label={`Set color to ${color}`}\r\n                  />\r\n                ))}\r\n              </div>\r\n              <button\r\n                className=\"adex-annotation-delete\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation()\r\n                  deleteAnnotation(annotation.id)\r\n                }}\r\n                aria-label=\"Delete annotation\"\r\n              >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n                  <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\r\n                  />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n            <div className=\"adex-annotation-page\">Page {annotation.pageNumber} - {new Date(annotation.createdAt).toLocaleString()}</div>    \r\n          </div>\r\n        </div>\r\n      )\r\n    },\r\n    [deleteAnnotation, updateAnnotation],\r\n  )\r\n\r\n  // Add a class to the main viewer div based on text selection state\r\n  // Update the className in the main div to include the bookmarks sidebar state\r\n  return (\r\n    <div\r\n      ref={viewerRef}\r\n      className={`PDFViewer adex-viewer ${\r\n        fullScreenView ? \"fullScreenView\" : \"\"\r\n      } ${sidebar ? \"thumbs-slide-in\" : \"thumbs-slide-out\"} dev-abhishekbagul ${isMobile ? \"adex-mobile\" : \"\"} ${!textOptions.enableSelection ? \"disable-text-selection\" : \"\"} ${isPrinting ? \"adex-printing\" : \"\"}`}\r\n    >\r\n      {showToolbar && (\r\n        <div className=\"adex-topbar\">\r\n          {showControls?.navigation && (\r\n            <div className=\"adex-control-page\">\r\n              {showControls?.sidebarButton ? (\r\n                <button onClick={() => setSidebar(!sidebar)} aria-label=\"Toggle sidebar\">\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"16\"\r\n                    height=\"16\"\r\n                    fill=\"currentColor\"\r\n                    className=\"bi bi-layout-text-sidebar-reverse\"\r\n                    viewBox=\"0 0 16 16\"\r\n                  >\r\n                    <path d=\"M12.5 3a.5.5 0 0 1 0 1h-5a.5.5 0 0 1 0-1zm0 3a.5.5 0 0 1 0 1h-5a.5.5 0 0 1 0-1zm.5 3.5a.5.5 0 0 0-.5-.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 0 0 .5-.5m-.5 2.5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1 0-1z\" />\r\n                    <path d=\"M16 2a2 2 0 0 0-2-2H2a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2zM4 1v14H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zm1 0h9a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H5z\" />\r\n                  </svg>\r\n                </button>\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n              <button disabled={pageNumber <= 1} onClick={() => goToPage(pageNumber - 1)} aria-label=\"Previous page\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  fill=\"currentColor\"\r\n                  className=\"bi bi-chevron-up\"\r\n                  viewBox=\"0 0 16 16\"\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708z\"\r\n                  />\r\n                </svg>\r\n              </button>\r\n              <p>\r\n                <input\r\n                  className=\"page-number\"\r\n                  type=\"number\"\r\n                  onChange={updatePDFPage}\r\n                  value={previewNumber}\r\n                  aria-label=\"Page number\"\r\n                />{\" \"}\r\n                / {numPages || \"?\"}\r\n              </p>\r\n              <button\r\n                disabled={numPages === null || pageNumber >= numPages}\r\n                onClick={() => goToPage(pageNumber + 1)}\r\n                aria-label=\"Next page\"\r\n              >\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  fill=\"currentColor\"\r\n                  className=\"bi bi-chevron-down\"\r\n                  viewBox=\"0 0 16 16\"\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708\"\r\n                  />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          )}\r\n\r\n          {showControls?.zoom && (\r\n            <div className=\"adex-control-zoom\">\r\n              {showControls?.rotation && (\r\n                <button\r\n                  onClick={() => rotatePage(pageNumber, false)}\r\n                  aria-label=\"Rotate counterclockwise\"\r\n                  title=\"Rotate counterclockwise\"\r\n                >\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"16\"\r\n                    height=\"16\"\r\n                    fill=\"currentColor\"\r\n                    viewBox=\"0 0 16 16\"\r\n                  >\r\n                    <path fillRule=\"evenodd\" d=\"M8 3a5 5 0 1 1-4.546 2.914.5.5 0 0 0-.908-.417A6 6 0 1 0 8 2v1z\" />\r\n                    <path d=\"M8 4.466V.534a.25.25 0 0 0-.41-.192L5.23 2.308a.25.25 0 0 0 0 .384l2.36 1.966A.25.25 0 0 0 8 4.466z\" />\r\n                  </svg>\r\n                </button>\r\n              )}\r\n              <select onChange={(e) => setScale(+e.target.value)} value={scale} aria-label=\"Zoom level\">\r\n                {scaleSets.map((scaleLevel) => (\r\n                  <option key={scaleLevel} value={scaleLevel}>\r\n                    {(scaleLevel * 100).toFixed(0)}%\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              {showControls?.rotation && (\r\n                <button\r\n                  onClick={() => rotatePage(pageNumber, true)}\r\n                  aria-label=\"Rotate clockwise\"\r\n                  title=\"Rotate clockwise\"\r\n                >\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"16\"\r\n                    height=\"16\"\r\n                    fill=\"currentColor\"\r\n                    viewBox=\"0 0 16 16\"\r\n                  >\r\n                    <path fillRule=\"evenodd\" d=\"M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2v1z\" />\r\n                    <path d=\"M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466z\" />\r\n                  </svg>\r\n                </button>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"adex-control-options\">\r\n            {showControls?.print && (\r\n              <button onClick={handlePrint} aria-label=\"Print document\" title=\"Print document\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n                  <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\" />\r\n                  <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\" />\r\n                </svg>\r\n              </button>\r\n            )}\r\n            {showControls?.fullscreen && (\r\n              <button onClick={toggleFullscreen} aria-label={fullScreenView ? \"Exit fullscreen\" : \"Enter fullscreen\"}>\r\n                {!fullScreenView ? (\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"16\"\r\n                    height=\"16\"\r\n                    fill=\"currentColor\"\r\n                    className=\"bi bi-arrows-fullscreen\"\r\n                    viewBox=\"0 0 16 16\"\r\n                  >\r\n                    <path\r\n                      fillRule=\"evenodd\"\r\n                      d=\"M5.828 10.172a.5.5 0 0 0-.707 0l-4.096 4.096V11.5a.5.5 0 0 0-1 0v3.975a.5.5 0 0 0 .5.5H4.5a.5.5 0 0 0 0-1H1.732l4.096-4.096a.5.5 0 0 0 0-.707m4.344 0a.5.5 0 0 1 .707 0l4.096 4.096V11.5a.5.5 0 1 1 1 0v3.975a.5.5 0 0 1-.5.5H11.5a.5.5 0 0 1 0-1h2.768l-4.096-4.096a.5.5 0 0 1 0-.707m0-4.344a.5.5 0 0 0 .707 0l4.096-4.096V4.5a.5.5 0 1 0 1 0V.525a.5.5 0 0 0-.5-.5H11.5a.5.5 0 0 0 0 1h2.768l-4.096 4.096a.5.5 0 0 0 0 .707m-4.344 0a.5.5 0 0 1-.707 0L1.025 1.732V4.5a.5.5 0 0 1-1 0V.525a.5.5 0 0 1 .5-.5H4.5a.5.5 0 0 1 0 1H1.732l4.096 4.096a.5.5 0 0 1 0 .707\"\r\n                    />\r\n                  </svg>\r\n                ) : (\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"16\"\r\n                    height=\"16\"\r\n                    fill=\"currentColor\"\r\n                    className=\"bi bi-fullscreen-exit\"\r\n                    viewBox=\"0 0 16 16\"\r\n                  >\r\n                    <path d=\"M5.5 0a.5.5 0 0 1 .5.5v4A1.5 1.5 0 0 1 4.5 6h-4a.5.5 0 0 1 0-1h4a.5.5 0 0 0 .5-.5v-4a.5.5 0 0 1 .5-.5m5 0a.5.5 0 0 1 .5.5v4a.5.5 0 0 0 .5.5h4a.5.5 0 0 1 0 1h-4A1.5 1.5 0 0 1 10 4.5v-4a.5.5 0 0 1 .5-.5M0 10.5a.5.5 0 0 1 .5-.5h4A1.5 1.5 0 0 1 6 11.5v4a.5.5 0 0 1-1 0v-4a.5.5 0 0 0-.5-.5h-4a.5.5 0 0 1-.5-.5m10 1a1.5 1.5 0 0 1 1.5-1.5h4a.5.5 0 0 1 0 1h-4a.5.5 0 0 0-.5.5v4a.5.5 0 0 1-1 0z\" />\r\n                  </svg>\r\n                )}\r\n              </button>\r\n            )}\r\n\r\n            {showControls?.download && (\r\n              <a\r\n                href={data?.url}\r\n                download=\"document.pdf\"\r\n                className=\"open-link-btn\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                aria-label=\"Download PDF\"\r\n              >\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  fill=\"currentColor\"\r\n                  className=\"bi bi-box-arrow-down\"\r\n                  viewBox=\"0 0 16 16\"\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M3.5 10a.5.5 0 0 1-.5-.5v-8a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 .5.5v8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 0 0 1h2A1.5 1.5 0 0 0 14 9.5v-8A1.5 1.5 0 0 0 12.5 0h-9A1.5 1.5 0 0 0 2 1.5v8A1.5 1.5 0 0 0 3.5 11h2a.5.5 0 0 0 0-1z\"\r\n                  />\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M7.646 15.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 14.293V5.5a.5.5 0 0 0-1 0v8.793l-2.146-2.147a.5.5 0 0 0-.708.708l3 3z\"\r\n                  />\r\n                </svg>\r\n              </a>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"adex-preview-panel\" style={{ display: \"flex\" }}>\r\n        <div className=\"adex-left-col\" style={{ flexShrink: 0 }}>\r\n          <button\r\n            onClick={() => {\r\n              setLeftPanel(0), setSidebar(true)\r\n            }}\r\n            aria-label=\"Pages Previews\"\r\n            title=\"Pages Previews\"\r\n            className={leftPanel == 0 ? \"active\" : \"\"}\r\n          >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n              <path d=\"M14 4.5V14a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h5.5zm-3 0A1.5 1.5 0 0 1 9.5 3V1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V4.5z\" />\r\n              <path d=\"M4.5 12.5A.5.5 0 0 1 5 12h3a.5.5 0 0 1 0 1H5a.5.5 0 0 1-.5-.5m0-2A.5.5 0 0 1 5 10h6a.5.5 0 0 1 0 1H5a.5.5 0 0 1-.5-.5m1.639-3.708 1.33.886 1.854-1.855a.25.25 0 0 1 .289-.047l1.888.974V8.5a.5.5 0 0 1-.5.5H5a.5.5 0 0 1-.5-.5V8s1.54-1.274 1.639-1.208M6.25 6a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5\" />\r\n            </svg>\r\n          </button>\r\n\r\n          {showControls?.search && (\r\n            <button\r\n              onClick={toggleSearch}\r\n              aria-label=\"Search document\"\r\n              title=\"Search document\"\r\n              className={leftPanel == 1 ? \"active\" : \"\"}\r\n            >\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\r\n              </svg>\r\n            </button>\r\n          )}\r\n\r\n          {showControls?.bookmarks && (\r\n            <button\r\n              onClick={toggleBookmarksSidebar}\r\n              aria-label=\"Bookmarks and outline\"\r\n              title=\"Bookmarks and outline\"\r\n              className={leftPanel == 2 ? \"active\" : \"\"}\r\n            >\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M2 4a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v11.5a.5.5 0 0 1-.777.416L7 13.101l-4.223 2.815A.5.5 0 0 1 2 15.5zm2-1a1 1 0 0 0-1 1v10.566l3.723-2.482a.5.5 0 0 1 .554 0L11 14.566V4a1 1 0 0 0-1-1z\" />\r\n                <path d=\"M4.268 1H12a1 1 0 0 1 1 1v11.768l.223.148A.5.5 0 0 0 14 13.5V2a2 2 0 0 0-2-2H6a2 2 0 0 0-1.732 1\" />\r\n              </svg>\r\n            </button>\r\n          )}\r\n          {showControls?.annotations && (\r\n            <button\r\n              onClick={() => toggleAnnotationsSidebar()}\r\n              aria-label=\"Annotations\"\r\n              title=\"Annotations\"\r\n              className={leftPanel == 3 ? \"active\" : \"\"}\r\n            >\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M2.5 1A1.5 1.5 0 0 0 1 2.5v11A1.5 1.5 0 0 0 2.5 15h6.086a1.5 1.5 0 0 0 1.06-.44l4.915-4.914A1.5 1.5 0 0 0 15 8.586V2.5A1.5 1.5 0 0 0 13.5 1zM2 2.5a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 .5.5V8H9.5A1.5 1.5 0 0 0 8 9.5V14H2.5a.5.5 0 0 1-.5-.5zm7 11.293V9.5a.5.5 0 0 1 .5-.5h4.293z\"/>\r\n              </svg>\r\n            </button>\r\n          )}\r\n        </div>\r\n        <div\r\n          className=\"adex-left-panel\"\r\n          style={{\r\n            width: sidebar ? `${leftPanelWidth}px` : \"0px\",\r\n            flexShrink: 0,\r\n            transition: isDragging ? \"none\" : \"0.2s width ease\",\r\n            overflow: \"hidden\",\r\n            position: \"relative\",\r\n          }}\r\n        >\r\n          {/* Thumbnail Sidebar */}\r\n          {leftPanel == 0 && (\r\n            <div className=\"adex-preview-thumbs\">\r\n              {pdfBlobUrl && (\r\n                <Document\r\n                  file={pdfBlobUrl}\r\n                  loading={\r\n                    <div className=\"adex-thumb-loader\">\r\n                      <span className=\"thumb-loader\"></span>\r\n                      <span className=\"thumb-loader\"></span>\r\n                      <span className=\"thumb-loader\"></span>\r\n                    </div>\r\n                  }\r\n                  onLoadSuccess={onDocumentLoadSuccess}\r\n                  onLoadError={onDocumentLoadError}\r\n                >\r\n                  {!pdfBlobUrl && (\r\n                    <div className=\"adex-thumb-loader\">\r\n                      <span className=\"thumb-loader\"></span>\r\n                      <span className=\"thumb-loader\"></span>\r\n                      <span className=\"thumb-loader\"></span>\r\n                    </div>\r\n                  )}\r\n                  {numPages &&\r\n                    Array.from({ length: numPages }, (_, index) => (\r\n                      <button\r\n                        key={`thumb-${index}`}\r\n                        className={`adex-page-thumb ${pageNumber === index + 1 ? \"active\" : \"\"}`}\r\n                        onClick={() => goToPage(index + 1)}\r\n                        aria-label={`Page ${index + 1}`}\r\n                        aria-current={pageNumber === index + 1 ? \"page\" : undefined}\r\n                      >\r\n                        <Page\r\n                          scale={0.2}\r\n                          loading={\r\n                            <div className=\"adex-thumb-loader\">\r\n                              <span className=\"thumb-loader\"></span>\r\n                            </div>\r\n                          }\r\n                          pageNumber={index + 1}\r\n                          width={600}\r\n                          rotate={pageRotations[index + 1] || 0} // Apply rotation to thumbnails\r\n                        />\r\n                      </button>\r\n                    ))}\r\n                </Document>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {/* Search Results Sidebar */}\r\n          {leftPanel == 1 && (\r\n            <div className=\"adex-preview-search\" ref={searchResultsRef}>\r\n              \r\n              <div className=\"adex-search-bar\">\r\n                <div className=\"adex-search-results-header\">\r\n                  <div>\r\n                  <h3>Search</h3>\r\n                  <span className=\"adex-search-results-count\">{searchResults.length} matches</span>\r\n                  </div>\r\n                  <div className=\"adex-search-controls\">\r\n                  { searchResults.length > 0 && <div className=\"adex-search-navigation\">\r\n                    <button\r\n                      className=\"adex-search-prev\"\r\n                      onClick={prevSearchResult}\r\n                      disabled={searchResults.length <= 1}\r\n                      aria-label=\"Previous result\"\r\n                    >\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n                        <path fill-rule=\"evenodd\" d=\"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708z\"/>\r\n                      </svg>\r\n                    </button>\r\n                    <button\r\n                      className=\"adex-search-next\"\r\n                      onClick={nextSearchResult}\r\n                      disabled={searchResults.length <= 1}\r\n                      aria-label=\"Next result\"\r\n                    >\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n                        <path fill-rule=\"evenodd\" d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708\"/>\r\n                      </svg>\r\n                    </button>\r\n                  </div>}\r\n                  </div>\r\n                </div>\r\n                <div className=\"adex-search-input-container\">\r\n                  <input\r\n                    ref={searchInputRef}\r\n                    type=\"text\"\r\n                    className=\"adex-search-input\"\r\n                    placeholder=\"Search in document...\"\r\n                    value={searchQuery}\r\n                    onChange={handleSearchChange}\r\n                    onKeyDown={handleSearchKeyDown}\r\n                    aria-label=\"Search in document\"\r\n                  />\r\n                  <button\r\n                    className=\"adex-search-button\"\r\n                    onClick={performSearch}\r\n                    disabled={isSearching || !searchQuery.trim() || !pdfDocument || !pdfDocument.numPages}\r\n                    aria-label=\"Search\"\r\n                  >\r\n                    {isSearching ? (\r\n                      <span className=\"adex-search-loading\"></span>\r\n                    ) : (\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"16\"\r\n                        height=\"16\"\r\n                        fill=\"currentColor\"\r\n                        viewBox=\"0 0 16 16\"\r\n                      >\r\n                        <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\r\n                      </svg>\r\n                    )}\r\n                  </button>\r\n                </div>\r\n                {/* {searchResults.length > 0 && (\r\n            <div className=\"adex-search-results\">\r\n              \r\n                  <div className=\"adex-search-navigation\">\r\n                    <button\r\n                      className=\"adex-search-prev\"\r\n                      onClick={prevSearchResult}\r\n                      disabled={searchResults.length <= 1}\r\n                      aria-label=\"Previous result\"\r\n                    >\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"16\"\r\n                        height=\"16\"\r\n                        fill=\"currentColor\"\r\n                        viewBox=\"0 0 16 16\"\r\n                      >\r\n                        <path\r\n                          fillRule=\"evenodd\"\r\n                          d=\"M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z\"\r\n                        />\r\n                      </svg>\r\n                    </button>\r\n                    <button\r\n                      className=\"adex-search-next\"\r\n                      onClick={nextSearchResult}\r\n                      disabled={searchResults.length <= 1}\r\n                      aria-label=\"Next result\"\r\n                    >\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"16\"\r\n                        height=\"16\"\r\n                        fill=\"currentColor\"\r\n                        viewBox=\"0 0 16 16\"\r\n                      >\r\n                        <path\r\n                          fillRule=\"evenodd\"\r\n                          d=\"M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z\"\r\n                        />\r\n                      </svg>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )} */}\r\n              </div>\r\n              \r\n              <div className=\"adex-search-results-list\">\r\n                {searchResults.length > 0 ? (\r\n                  searchResults.map((result, index) => (\r\n                    <div\r\n                      key={`search-result-${index}`}\r\n                      id={`search-result-${result.matchIndex}`}\r\n                      className={`adex-search-result-item ${currentSearchResult === result.matchIndex ? \"active\" : \"\"}`}\r\n                      onClick={() => {\r\n                        setCurrentSearchResult(result.matchIndex)\r\n                        navigateToSearchResult(result)\r\n                      }}\r\n                    >\r\n                      <div className=\"adex-search-result-page\">Page {result.pageIndex + 1}</div>\r\n                      <div className=\"adex-search-result-context\">\r\n                        {result.context.split(new RegExp(`(${searchQuery})`, \"i\")).map((part, i) =>\r\n                          part.toLowerCase() === searchQuery.toLowerCase() ? (\r\n                            <span key={i} className=\"adex-search-result-highlight\">\r\n                              {part}\r\n                            </span>\r\n                          ) : (\r\n                            <span key={i}>{part}</span>\r\n                          ),\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <div className=\"adex-search-no-results\">{isSearching ? \"Searching...\" : \"No results found\"}</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Bookmarks and Outline Sidebar */}\r\n          {leftPanel == 2 && (\r\n            <div className=\"adex-preview-bookmarks\" ref={bookmarksRef}>\r\n              <div className=\"adex-bookmarks-header\">\r\n                <div className=\"adex-bookmarks-tabs\">\r\n                  <button\r\n                    className={`adex-bookmarks-tab ${activeTab === \"outline\" ? \"active\" : \"\"}`}\r\n                    onClick={() => setActiveTab(\"outline\")}\r\n                  >\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n                      <path fill-rule=\"evenodd\" d=\"M5 11.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5m0-4a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5m0-4a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5\"/>\r\n                      <path d=\"M1.713 11.865v-.474H2c.217 0 .363-.137.363-.317 0-.185-.158-.31-.361-.31-.223 0-.367.152-.373.31h-.59c.016-.467.373-.787.986-.787.588-.002.954.291.957.703a.595.595 0 0 1-.492.594v.033a.615.615 0 0 1 .569.631c.003.533-.502.8-1.051.8-.656 0-1-.37-1.008-.794h.582c.008.178.186.306.422.309.254 0 .424-.145.422-.35-.002-.195-.155-.348-.414-.348h-.3zm-.004-4.699h-.604v-.035c0-.408.295-.844.958-.844.583 0 .96.326.96.756 0 .389-.257.617-.476.848l-.537.572v.03h1.054V9H1.143v-.395l.957-.99c.138-.142.293-.304.293-.508 0-.18-.147-.32-.342-.32a.33.33 0 0 0-.342.338zM2.564 5h-.635V2.924h-.031l-.598.42v-.567l.629-.443h.635z\"/>\r\n                    </svg> <span>Outline</span>\r\n                  </button>\r\n                  <button\r\n                    className={`adex-bookmarks-tab ${activeTab === \"bookmarks\" ? \"active\" : \"\"}`}\r\n                    onClick={() => setActiveTab(\"bookmarks\")}\r\n                  >\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"  viewBox=\"0 0 16 16\">\r\n                      <path fill-rule=\"evenodd\" d=\"M6 8V1h1v6.117L8.743 6.07a.5.5 0 0 1 .514 0L11 7.117V1h1v7a.5.5 0 0 1-.757.429L9 7.083 6.757 8.43A.5.5 0 0 1 6 8\"/>\r\n                      <path d=\"M3 0h10a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-1h1v1a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v1H1V2a2 2 0 0 1 2-2\"/>\r\n                      <path d=\"M1 5v-.5a.5.5 0 0 1 1 0V5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1zm0 3v-.5a.5.5 0 0 1 1 0V8h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1zm0 3v-.5a.5.5 0 0 1 1 0v.5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1z\"/>\r\n                    </svg>\r\n                    <span>Bookmarks</span>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"adex-bookmarks-content\">\r\n                {activeTab === \"outline\" ? (\r\n                  <div className=\"adex-outline-container\">\r\n                    {documentOutline.length > 0 ? (\r\n                      <div className=\"adex-outline-list\">{renderOutlineItems(documentOutline)}</div>\r\n                    ) : (\r\n                      <div className=\"adex-no-outline\">No outline available in this document</div>\r\n                    )}\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"adex-bookmarks-container\">\r\n                    <div className=\"adex-bookmarks-actions\">\r\n                      {isAddingBookmark ? (\r\n                        <div className=\"adex-add-bookmark-form\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"adex-bookmark-title-input\"\r\n                            placeholder=\"Bookmark title\"\r\n                            value={newBookmarkTitle}\r\n                            onChange={(e) => setNewBookmarkTitle(e.target.value)}\r\n                            autoFocus\r\n                            onKeyDown={(e) => {\r\n                              if (e.key === \"Enter\") addBookmark()\r\n                              if (e.key === \"Escape\") setIsAddingBookmark(false)\r\n                            }}\r\n                          />\r\n                          <div className=\"adex-bookmark-form-actions\">\r\n                            <button\r\n                              className=\"adex-bookmark-save\"\r\n                              onClick={addBookmark}\r\n                              disabled={!newBookmarkTitle.trim()}\r\n                            >\r\n                              Save\r\n                            </button>\r\n                            <button className=\"adex-bookmark-cancel\" onClick={() => setIsAddingBookmark(false)}>\r\n                              Cancel\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      ) : (\r\n                        <button className=\"adex-add-bookmark-btn\" onClick={() => setIsAddingBookmark(true)}>\r\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.777.416L8 13.101l-5.223 2.815A.5.5 0 0 1 2 15.5zm2-1a1 1 0 0 0-1 1v12.566l4.723-2.482a.5.5 0 0 1 .554 0L13 14.566V2a1 1 0 0 0-1-1z\"/>\r\n                            <path d=\"M8 4a.5.5 0 0 1 .5.5V6H10a.5.5 0 0 1 0 1H8.5v1.5a.5.5 0 0 1-1 0V7H6a.5.5 0 0 1 0-1h1.5V4.5A.5.5 0 0 1 8 4\"/>\r\n                          </svg>\r\n                          Add Bookmark\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n\r\n                    <div className=\"adex-bookmarks-list\">\r\n                      {bookmarks.length > 0 ? (\r\n                        bookmarks\r\n                          .sort((a, b) => a.pageNumber - b.pageNumber)\r\n                          .map((bookmark) => (\r\n                            <div key={bookmark.id} className=\"adex-bookmark-item\">\r\n                              <button className=\"adex-bookmark-link\" onClick={() => navigateToBookmark(bookmark)}>\r\n                                <svg\r\n                                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                                  width=\"16\"\r\n                                  height=\"16\"\r\n                                  fill=\"currentColor\"\r\n                                  viewBox=\"0 0 16 16\"\r\n                                >\r\n                                  <path d=\"M2 2v13.5a.5.5 0 0 0 .74.439L8 13.069l5.26 2.87A.5.5 0 0 0 14 15.5V2a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2z\" />\r\n                                </svg>\r\n                                <span className=\"adex-bookmark-title\">{bookmark.title}</span>\r\n                                <span className=\"adex-bookmark-page\">p. {bookmark.pageNumber}</span>\r\n                              </button>\r\n                              <button\r\n                                className=\"adex-bookmark-delete\"\r\n                                onClick={() => deleteBookmark(bookmark.id)}\r\n                                aria-label={`Delete bookmark: ${bookmark.title}`}\r\n                              >\r\n                                <svg\r\n                                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                                  width=\"12\"\r\n                                  height=\"12\"\r\n                                  fill=\"currentColor\"\r\n                                  viewBox=\"0 0 16 16\"\r\n                                >\r\n                                  <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n                                  <path\r\n                                    fillRule=\"evenodd\"\r\n                                    d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\r\n                                  />\r\n                                </svg>\r\n                              </button>\r\n                            </div>\r\n                          ))\r\n                      ) : (\r\n                        <div className=\"adex-no-bookmarks\">No bookmarks added yet</div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n          {/* Add the annotations sidebar panel */}\r\n          {leftPanel == 3 && (\r\n            <div className=\"adex-preview-annotations\">\r\n              <div className=\"adex-annotations-header\">\r\n                <h3>Annotations</h3>\r\n                <div className=\"adex-annotations-tools\">\r\n                  <button\r\n                    className={`adex-annotation-tool ${isAddingAnnotation && annotationType === \"note\" ? \"active\" : \"\"}`}\r\n                    onClick={() =>\r\n                      isAddingAnnotation && annotationType === \"note\"\r\n                        ? cancelAddingAnnotation()\r\n                        : startAddingAnnotation(\"note\")\r\n                    }\r\n                    aria-label=\"Add note\"\r\n                    title=\"Add note\"\r\n                  >\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n                      <path d=\"M2.5 1A1.5 1.5 0 0 0 1 2.5v11A1.5 1.5 0 0 0 2.5 15h6.086a1.5 1.5 0 0 0 1.06-.44l4.915-4.914A1.5 1.5 0 0 0 15 8.586V2.5A1.5 1.5 0 0 0 13.5 1zM2 2.5a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 .5.5V8H9.5A1.5 1.5 0 0 0 8 9.5V14H2.5a.5.5 0 0 1-.5-.5zm7 11.293V9.5a.5.5 0 0 1 .5-.5h4.293z\"/>\r\n                    </svg>\r\n                  </button>\r\n                  <button\r\n                    className={`adex-annotation-tool ${isAddingAnnotation && annotationType === \"highlight\" ? \"active\" : \"\"}`}\r\n                    onClick={() =>\r\n                      isAddingAnnotation && annotationType === \"highlight\"\r\n                        ? cancelAddingAnnotation()\r\n                        : startAddingAnnotation(\"highlight\")\r\n                    }\r\n                    aria-label=\"Add highlight\"\r\n                    title=\"Add highlight\"\r\n                    disabled={!textOptions.enableSelection}\r\n                  >\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n                      <path fill-rule=\"evenodd\" d=\"M11.096.644a2 2 0 0 1 2.791.036l1.433 1.433a2 2 0 0 1 .035 2.791l-.413.435-8.07 8.995a.5.5 0 0 1-.372.166h-3a.5.5 0 0 1-.234-.058l-.412.412A.5.5 0 0 1 2.5 15h-2a.5.5 0 0 1-.354-.854l1.412-1.412A.5.5 0 0 1 1.5 12.5v-3a.5.5 0 0 1 .166-.372l8.995-8.07zm-.115 1.47L2.727 9.52l3.753 3.753 7.406-8.254zm3.585 2.17.064-.068a1 1 0 0 0-.017-1.396L13.18 1.387a1 1 0 0 0-1.396-.018l-.068.065zM5.293 13.5 2.5 10.707v1.586L3.707 13.5z\"/>\r\n                    </svg>\r\n                  </button>\r\n                  <button\r\n                    className={`adex-annotation-tool ${isAddingAnnotation && annotationType === \"drawing\" ? \"active\" : \"\"}`}\r\n                    onClick={() =>\r\n                      isAddingAnnotation && annotationType === \"drawing\"\r\n                        ? cancelAddingAnnotation()\r\n                        : startAddingAnnotation(\"drawing\")\r\n                    }\r\n                    aria-label=\"Add drawing\"\r\n                    title=\"Add drawing\"\r\n                  >\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      width=\"16\"\r\n                      height=\"16\"\r\n                      fill=\"currentColor\"\r\n                      viewBox=\"0 0 16 16\"\r\n                    >\r\n                      <path d=\"M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z\" />\r\n                    </svg>\r\n                  </button>\r\n                </div>\r\n                {isAddingAnnotation && (\r\n                  <div className=\"adex-annotation-color-picker\">\r\n                    <div className=\"adex-color-options\">\r\n                      {[\"#ffeb3b\", \"#4caf50\", \"#2196f3\", \"#f44336\", \"#9c27b0\"].map((color) => (\r\n                        <button\r\n                          key={color}\r\n                          className={`adex-color-option ${annotationColor === color ? \"active\" : \"\"}`}\r\n                          style={{ backgroundColor: color }}\r\n                          onClick={() => setAnnotationColor(color)}\r\n                          aria-label={`Set color to ${color}`}\r\n                        />\r\n                      ))}\r\n                    </div>\r\n                    <button className=\"adex-cancel-annotation\" onClick={cancelAddingAnnotation} aria-label=\"Cancel\">\r\n                      Cancel\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"adex-annotations-list\">\r\n                {annotations.length > 0 ? (\r\n                  annotations\r\n                    .sort((a, b) => b.createdAt - a.createdAt)\r\n                    .map((annotation) => (\r\n                      <div\r\n                        key={annotation.id}\r\n                        className={`adex-annotation-item ${selectedAnnotation?.id === annotation.id ? \"active\" : \"\"}`}\r\n                        onClick={() => {\r\n                          // Toggle the selected annotation\r\n                          setSelectedAnnotation(selectedAnnotation?.id === annotation.id ? null : annotation)\r\n                          // Scroll to the annotation's page\r\n                          goToPage(annotation.pageNumber)\r\n\r\n                          // Add a small delay to ensure the page is loaded before trying to focus on the annotation\r\n                          setTimeout(() => {\r\n                            // Find the annotation element on the page and scroll to it\r\n                            const pageElement = pageRefs.current[annotation.pageNumber]\r\n                            if (pageElement) {\r\n                              const annotationElements = pageElement.querySelectorAll(\r\n                                `.adex-annotation[data-id=\"${annotation.id}\"]`,\r\n                              )\r\n                              if (annotationElements.length > 0) {\r\n                                annotationElements[0].scrollIntoView({ behavior: \"smooth\", block: \"center\" })\r\n                              }\r\n                            }\r\n                          }, 300)\r\n                        }}\r\n                      >\r\n                        <div className=\"adex-annotation-list-item\">\r\n                        <div className=\"adex-annotation-icon\" style={{ background: annotation.color }}>\r\n                          {annotation.type === \"note\" && (\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M2.5 1A1.5 1.5 0 0 0 1 2.5v11A1.5 1.5 0 0 0 2.5 15h6.086a1.5 1.5 0 0 0 1.06-.44l4.915-4.914A1.5 1.5 0 0 0 15 8.586V2.5A1.5 1.5 0 0 0 13.5 1zM2 2.5a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 .5.5V8H9.5A1.5 1.5 0 0 0 8 9.5V14H2.5a.5.5 0 0 1-.5-.5zm7 11.293V9.5a.5.5 0 0 1 .5-.5h4.293z\"/>\r\n                          </svg>\r\n                          )}\r\n                          {annotation.type === \"highlight\" && (\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n                            <path fill-rule=\"evenodd\" d=\"M11.096.644a2 2 0 0 1 2.791.036l1.433 1.433a2 2 0 0 1 .035 2.791l-.413.435-8.07 8.995a.5.5 0 0 1-.372.166h-3a.5.5 0 0 1-.234-.058l-.412.412A.5.5 0 0 1 2.5 15h-2a.5.5 0 0 1-.354-.854l1.412-1.412A.5.5 0 0 1 1.5 12.5v-3a.5.5 0 0 1 .166-.372l8.995-8.07zm-.115 1.47L2.727 9.52l3.753 3.753 7.406-8.254zm3.585 2.17.064-.068a1 1 0 0 0-.017-1.396L13.18 1.387a1 1 0 0 0-1.396-.018l-.068.065zM5.293 13.5 2.5 10.707v1.586L3.707 13.5z\"/>\r\n                          </svg>\r\n                          )}\r\n                          {annotation.type === \"drawing\" && (\r\n                            <svg\r\n                              xmlns=\"http://www.w3.org/2000/svg\"\r\n                              width=\"16\"\r\n                              height=\"16\"\r\n                              fill=\"currentColor\"\r\n                              viewBox=\"0 0 16 16\"\r\n                            >\r\n                              <path d=\"M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z\" />\r\n                            </svg>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"adex-annotation-content\">\r\n                          <div className=\"adex-annotation-title\">\r\n                            {annotation.type.charAt(0).toUpperCase() + annotation.type.slice(1)}\r\n                            <span className=\"adex-annotation-page\">Page {annotation.pageNumber}</span>\r\n                          </div>\r\n                          <div className=\"adex-annotation-preview\">\r\n                            {annotation.content\r\n                              ? annotation.content.substring(0, 50) + (annotation.content.length > 50 ? \"...\" : \"\")\r\n                              : \"No content\"}\r\n                          </div>\r\n                        </div>\r\n                        </div>\r\n                        {selectedAnnotation?.id === annotation.id && renderAnnotationDetail(annotation)}\r\n                      </div>\r\n                    ))\r\n                ) : (\r\n                  <div className=\"adex-no-annotations\">\r\n                    No annotations added yet. Use the tools above to add annotations to your document.\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {sidebar && (\r\n          <div\r\n            ref={resizeDividerRef}\r\n            style={{\r\n              width: \"8px\",\r\n              cursor: \"col-resize\",\r\n              background: \"rgba(0, 0, 0, 0.05)\",\r\n              flexShrink: 0,\r\n              zIndex: 10,\r\n              position: \"relative\",\r\n            }}\r\n            onMouseDown={startResize}\r\n          >\r\n            <div\r\n              style={{\r\n                position: \"absolute\",\r\n                top: \"50%\",\r\n                left: \"50%\",\r\n                transform: \"translate(-50%, -50%)\",\r\n                width: \"4px\",\r\n                height: \"30px\",\r\n                borderRadius: \"2px\",\r\n                background: \"rgba(0, 0, 0, 0.2)\",\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n        <div ref={previewRef} className=\"adex-preview\" style={{ flex: 1, overflow: \"auto\" }}>\r\n          {pdfBlobUrl && (\r\n            <Document\r\n              file={pdfBlobUrl}\r\n              loading={\r\n                <div className=\"adex-preview-loader\">\r\n                  <span className=\"page-loader\"></span>\r\n                  <span className=\"page-loader\"></span>\r\n                </div>\r\n              }\r\n              onLoadSuccess={onDocumentLoadSuccess}\r\n              onLoadError={onDocumentLoadError}\r\n              options={documentOptions}\r\n            >\r\n              {!pdfBlobUrl && (\r\n                <div className=\"adex-preview-loader\">\r\n                  <span className=\"page-loader\"></span>\r\n                  <span className=\"page-loader\"></span>\r\n                </div>\r\n              )}\r\n              {numPages &&\r\n                Array.from({ length: numPages }, (_, index) => (\r\n                  <div\r\n                    key={`page-${index}`}\r\n                    ref={(el) => (pageRefs.current[index + 1] = el)}\r\n                    className=\"adex-page\"\r\n                    aria-label={`Page ${index + 1} content`}\r\n                    onClick={(e) => handlePageClick(e, index + 1)}\r\n                    onMouseDown={(e) => handleDrawingMouseDown(e, index + 1)}\r\n                    onMouseMove={handleDrawingMouseMove}\r\n                    onMouseUp={(e) => {\r\n                      handleDrawingMouseUp(e, index + 1), handleTextSelection(index + 1)\r\n                    }}\r\n                    onMouseLeave={(e) => isDrawing && handleDrawingMouseUp(e, index + 1)}\r\n                  >\r\n                    <Page\r\n                      loading={\r\n                        <div className=\"adex-preview-loader\">\r\n                          <span className=\"page-loader\"></span>\r\n                        </div>\r\n                      }\r\n                      scale={scale}\r\n                      pageNumber={index + 1}\r\n                      width={600}\r\n                      rotate={pageRotations[index + 1] || 0} // Apply rotation\r\n                      renderTextLayer={isTextLayerEnabled}\r\n                      renderAnnotationLayer={isTextLayerEnabled}\r\n                      canvasBackground=\"white\"\r\n                    />\r\n                    {renderAnnotations(index + 1)}\r\n                    {isDrawing && index + 1 === pageNumber && renderCurrentDrawing()}\r\n                  </div>\r\n                ))}\r\n            </Document>\r\n          )}\r\n        </div>\r\n\r\n        {showInfo && (\r\n          <div className=\"adex-pdf-meta-info\">\r\n            <div className=\"adex-meta-panel\">\r\n              <div className=\"adex-pdf-meta-info-header\">\r\n                <strong>\r\n                  {\" \"}\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"16\"\r\n                    height=\"16\"\r\n                    fill=\"currentColor\"\r\n                    className=\"bi bi-info-square\"\r\n                    viewBox=\"0 0 16 16\"\r\n                  >\r\n                    <path d=\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z\" />\r\n                    <path d=\"m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0\" />\r\n                  </svg>{\" \"}\r\n                  Info: {metadata?.Title || \"N/A\"}\r\n                </strong>\r\n                <button\r\n                  onClick={() => {\r\n                    setShowInfo(false)\r\n                  }}\r\n                  aria-label=\"Close info panel\"\r\n                >\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"16\"\r\n                    height=\"16\"\r\n                    fill=\"currentColor\"\r\n                    className=\"bi bi-x-square\"\r\n                    viewBox=\"0 0 16 16\"\r\n                  >\r\n                    <path d=\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z\" />\r\n                    <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708\" />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n              <div className=\"adex-pdf-meta-info-content\">\r\n                <ul className=\"adex-pdf-meta-info-list\">\r\n                  {/* @ts-ignore */}\r\n                  {Object?.entries(metadata || {})?.map(([key, value]: [string, any]) => (\r\n                    <li key={key} className=\"adex-pdf-meta-info-item\">\r\n                      <strong>{key}:</strong> {typeof value === \"object\" ? JSON.stringify(value) : value}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"adex-power-row\">\r\n        <div className=\"adex-left-option\">\r\n          {showControls?.info && (\r\n            <button\r\n              onClick={() => {\r\n                setShowInfo(true)\r\n              }}\r\n              aria-label=\"Show document information\"\r\n            >\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                fill=\"currentColor\"\r\n                className=\"bi bi-info-square\"\r\n                viewBox=\"0 0 16 16\"\r\n              >\r\n                <path d=\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z\" />\r\n                <path d=\"m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0\" />\r\n              </svg>\r\n            </button>\r\n          )}\r\n        </div>\r\n        {showCredits && (\r\n          <p>\r\n            Created with <span>♥</span> by{\" \"}\r\n            <a href=\"https://github.com/abhibagul/\" target=\"_blank\" rel=\"noreferrer\">\r\n              Abhishek\r\n            </a>\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdexViewer\r\n"],"mappings":"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","names":["_a","pageNumber"]}